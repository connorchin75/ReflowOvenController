; ModuleID = 'C:\Users\cchin\CapstoneFirmware\Xinc2\ReflowOvenController\src\main.cpp'
target datalayout = "e-p:16:16:16-i1:16:16-i8:16:16-i16:16:16-i32:16:16-a0:16:16-s0:16:16-n16"
target triple = "XInC2"

%struct.rotary_encoder = type { i16, i16, i16 }
%struct.profile = type { [141 x i16] }
%struct.Pid = type { i16, i16, i16, i16, i16, i16 }

@Ascii_1 = global [105 x [5 x i16]] [[5 x i16] zeroinitializer, [5 x i16] [i16 0, i16 0, i16 79, i16 0, i16 0], [5 x i16] [i16 0, i16 7, i16 0, i16 7, i16 0], [5 x i16] [i16 20, i16 127, i16 20, i16 127, i16 20], [5 x i16] [i16 36, i16 42, i16 127, i16 42, i16 18], [5 x i16] [i16 35, i16 19, i16 8, i16 100, i16 98], [5 x i16] [i16 54, i16 73, i16 85, i16 34, i16 80], [5 x i16] [i16 0, i16 5, i16 3, i16 0, i16 0], [5 x i16] [i16 0, i16 28, i16 34, i16 65, i16 0], [5 x i16] [i16 0, i16 65, i16 34, i16 28, i16 0], [5 x i16] [i16 20, i16 8, i16 62, i16 8, i16 20], [5 x i16] [i16 8, i16 8, i16 62, i16 8, i16 8], [5 x i16] [i16 0, i16 80, i16 48, i16 0, i16 0], [5 x i16] [i16 8, i16 8, i16 8, i16 8, i16 8], [5 x i16] [i16 0, i16 96, i16 96, i16 0, i16 0], [5 x i16] [i16 32, i16 16, i16 8, i16 4, i16 2], [5 x i16] [i16 62, i16 81, i16 73, i16 69, i16 62], [5 x i16] [i16 0, i16 66, i16 127, i16 64, i16 0], [5 x i16] [i16 66, i16 97, i16 81, i16 73, i16 70], [5 x i16] [i16 33, i16 65, i16 69, i16 75, i16 49], [5 x i16] [i16 24, i16 20, i16 18, i16 127, i16 16], [5 x i16] [i16 39, i16 69, i16 69, i16 69, i16 57], [5 x i16] [i16 60, i16 74, i16 73, i16 73, i16 48], [5 x i16] [i16 1, i16 113, i16 9, i16 5, i16 3], [5 x i16] [i16 54, i16 73, i16 73, i16 73, i16 54], [5 x i16] [i16 6, i16 73, i16 73, i16 41, i16 30], [5 x i16] [i16 0, i16 54, i16 54, i16 0, i16 0], [5 x i16] [i16 0, i16 86, i16 54, i16 0, i16 0], [5 x i16] [i16 8, i16 20, i16 34, i16 65, i16 0], [5 x i16] [i16 20, i16 20, i16 20, i16 20, i16 20], [5 x i16] [i16 0, i16 65, i16 34, i16 20, i16 8], [5 x i16] [i16 2, i16 1, i16 81, i16 9, i16 6], [5 x i16] [i16 50, i16 73, i16 121, i16 65, i16 62], [5 x i16] [i16 126, i16 17, i16 17, i16 17, i16 126], [5 x i16] [i16 127, i16 73, i16 73, i16 73, i16 54], [5 x i16] [i16 62, i16 65, i16 65, i16 65, i16 34], [5 x i16] [i16 127, i16 65, i16 65, i16 34, i16 28], [5 x i16] [i16 127, i16 73, i16 73, i16 73, i16 65], [5 x i16] [i16 127, i16 9, i16 9, i16 9, i16 1], [5 x i16] [i16 62, i16 65, i16 73, i16 73, i16 122], [5 x i16] [i16 127, i16 8, i16 8, i16 8, i16 127], [5 x i16] [i16 0, i16 65, i16 127, i16 65, i16 0], [5 x i16] [i16 32, i16 64, i16 65, i16 63, i16 1], [5 x i16] [i16 127, i16 8, i16 20, i16 34, i16 65], [5 x i16] [i16 127, i16 64, i16 64, i16 64, i16 64], [5 x i16] [i16 127, i16 2, i16 12, i16 2, i16 127], [5 x i16] [i16 127, i16 4, i16 8, i16 16, i16 127], [5 x i16] [i16 62, i16 65, i16 65, i16 65, i16 62], [5 x i16] [i16 127, i16 9, i16 9, i16 9, i16 6], [5 x i16] [i16 62, i16 65, i16 81, i16 33, i16 94], [5 x i16] [i16 127, i16 9, i16 25, i16 41, i16 70], [5 x i16] [i16 70, i16 73, i16 73, i16 73, i16 49], [5 x i16] [i16 1, i16 1, i16 127, i16 1, i16 1], [5 x i16] [i16 63, i16 64, i16 64, i16 64, i16 63], [5 x i16] [i16 31, i16 32, i16 64, i16 32, i16 31], [5 x i16] [i16 63, i16 64, i16 56, i16 64, i16 63], [5 x i16] [i16 99, i16 20, i16 8, i16 20, i16 99], [5 x i16] [i16 7, i16 8, i16 112, i16 8, i16 7], [5 x i16] [i16 97, i16 81, i16 73, i16 69, i16 67], [5 x i16] [i16 0, i16 127, i16 65, i16 65, i16 0], [5 x i16] [i16 2, i16 4, i16 8, i16 16, i16 32], [5 x i16] [i16 0, i16 65, i16 65, i16 127, i16 0], [5 x i16] [i16 4, i16 2, i16 1, i16 2, i16 4], [5 x i16] [i16 64, i16 64, i16 64, i16 64, i16 64], [5 x i16] [i16 1, i16 2, i16 4, i16 0, i16 0], [5 x i16] [i16 32, i16 84, i16 84, i16 84, i16 120], [5 x i16] [i16 127, i16 72, i16 68, i16 68, i16 56], [5 x i16] [i16 56, i16 68, i16 68, i16 68, i16 32], [5 x i16] [i16 56, i16 68, i16 68, i16 72, i16 127], [5 x i16] [i16 56, i16 84, i16 84, i16 84, i16 24], [5 x i16] [i16 8, i16 126, i16 9, i16 1, i16 2], [5 x i16] [i16 6, i16 73, i16 73, i16 73, i16 63], [5 x i16] [i16 127, i16 8, i16 4, i16 4, i16 120], [5 x i16] [i16 0, i16 68, i16 125, i16 64, i16 0], [5 x i16] [i16 32, i16 64, i16 68, i16 61, i16 0], [5 x i16] [i16 127, i16 16, i16 40, i16 68, i16 0], [5 x i16] [i16 0, i16 65, i16 127, i16 64, i16 0], [5 x i16] [i16 124, i16 4, i16 24, i16 4, i16 124], [5 x i16] [i16 124, i16 8, i16 4, i16 4, i16 120], [5 x i16] [i16 56, i16 68, i16 68, i16 68, i16 56], [5 x i16] [i16 124, i16 20, i16 20, i16 20, i16 8], [5 x i16] [i16 8, i16 20, i16 20, i16 24, i16 124], [5 x i16] [i16 124, i16 8, i16 4, i16 4, i16 8], [5 x i16] [i16 72, i16 84, i16 84, i16 84, i16 32], [5 x i16] [i16 4, i16 63, i16 68, i16 64, i16 32], [5 x i16] [i16 60, i16 64, i16 64, i16 32, i16 124], [5 x i16] [i16 28, i16 32, i16 64, i16 32, i16 28], [5 x i16] [i16 60, i16 64, i16 48, i16 64, i16 60], [5 x i16] [i16 68, i16 40, i16 16, i16 40, i16 68], [5 x i16] [i16 12, i16 80, i16 80, i16 80, i16 60], [5 x i16] [i16 68, i16 100, i16 84, i16 76, i16 68], [5 x i16] [i16 0, i16 8, i16 54, i16 65, i16 0], [5 x i16] [i16 0, i16 0, i16 127, i16 0, i16 0], [5 x i16] [i16 0, i16 65, i16 54, i16 8, i16 0], [5 x i16] [i16 2, i16 1, i16 2, i16 4, i16 2], [5 x i16] [i16 8, i16 12, i16 14, i16 12, i16 8], [5 x i16] [i16 8, i16 24, i16 56, i16 24, i16 8], [5 x i16] [i16 0, i16 15, i16 9, i16 9, i16 15], [5 x i16] [i16 24, i16 60, i16 126, i16 24, i16 24], [5 x i16] [i16 24, i16 24, i16 126, i16 60, i16 24], [5 x i16] [i16 28, i16 34, i16 193, i16 34, i16 28], [5 x i16] [i16 2, i16 4, i16 255, i16 4, i16 2], [5 x i16] [i16 2, i16 1, i16 0, i16 1, i16 2], [5 x i16] [i16 24, i16 4, i16 255, i16 4, i16 24], [5 x i16] [i16 0, i16 15, i16 0, i16 15, i16 0]], align 1
@_ZZ12draw_lil_guyhhmmjE7lil_guy = private unnamed_addr constant [2 x [24 x i16]] [[24 x i16] [i16 0, i16 2050, i16 1028, i16 520, i16 272, i16 160, i16 64, i16 64, i16 64, i16 64, i16 64, i16 224, i16 592, i16 584, i16 1092, i16 224, i16 17, i16 520, i16 1028, i16 1028, i16 520, i16 272, i16 224, i16 0], [24 x i16] [i16 0, i16 160, i16 160, i16 160, i16 160, i16 160, i16 64, i16 592, i16 592, i16 592, i16 592, i16 224, i16 64, i16 64, i16 64, i16 1092, i16 224, i16 520, i16 1028, i16 1028, i16 520, i16 272, i16 224, i16 0]], align 1
@_ZZ17OLED_profile_pagejE4text = private unnamed_addr constant [9 x i16] [i16 80, i16 114, i16 111, i16 102, i16 105, i16 108, i16 101, i16 32, i16 35], align 1
@_ZZ17OLED_profile_pagejE5text2 = private unnamed_addr constant [10 x i16] [i16 115, i16 111, i16 97, i16 107, i16 32, i16 116, i16 105, i16 109, i16 101, i16 61], align 1
@_ZZ17OLED_profile_pagejE5text3 = private unnamed_addr constant [11 x i16] [i16 115, i16 112, i16 105, i16 107, i16 101, i16 32, i16 116, i16 105, i16 109, i16 101, i16 61], align 1
@_ZZ18OLED_profile_timesPjE5text4 = private unnamed_addr constant [13 x i16] [i16 99, i16 111, i16 111, i16 108, i16 105, i16 110, i16 103, i16 32, i16 116, i16 105, i16 109, i16 101, i16 61], align 1
@_ZZ21OLED_display_progressjE4arr1 = private unnamed_addr constant [9 x i16] [i16 80, i16 114, i16 111, i16 102, i16 105, i16 108, i16 101, i16 58, i16 35], align 1
@_ZZ21OLED_display_progressjE12arr_progress = private unnamed_addr constant [9 x i16] [i16 80, i16 114, i16 111, i16 103, i16 114, i16 101, i16 115, i16 115, i16 58], align 1
@_ZZ21OLED_display_progressjE8arr_temp = private unnamed_addr constant [12 x i16] [i16 84, i16 101, i16 109, i16 112, i16 101, i16 114, i16 97, i16 116, i16 117, i16 114, i16 101, i16 58], align 1
@_ZZ17OLED_end_progressvE4text = private unnamed_addr constant [9 x i16] [i16 67, i16 111, i16 109, i16 112, i16 108, i16 101, i16 116, i16 101, i16 33], align 1
@_ZZ17OLED_end_progressvE5text2 = private unnamed_addr constant [14 x i16] [i16 79, i16 112, i16 101, i16 110, i16 32, i16 79, i16 118, i16 101, i16 110, i16 32, i16 68, i16 111, i16 111, i16 114], align 1
@_ZZ20OLED_display_warningvE4text = private unnamed_addr constant [7 x i16] [i16 87, i16 65, i16 82, i16 78, i16 73, i16 78, i16 71], align 1
@_ZZ20OLED_display_warningvE5text1 = private unnamed_addr constant [19 x i16] [i16 72, i16 117, i16 109, i16 105, i16 100, i16 105, i16 116, i16 121, i16 32, i16 105, i16 115, i16 32, i16 103, i16 114, i16 101, i16 97, i16 116, i16 101, i16 114], align 1
@_ZZ20OLED_display_warningvE5text2 = private unnamed_addr constant [12 x i16] [i16 116, i16 104, i16 97, i16 110, i16 32, i16 109, i16 97, i16 120, i16 105, i16 109, i16 117, i16 109], align 1
@_ZZ20OLED_display_warningvE7arr_hum = private unnamed_addr constant [9 x i16] [i16 72, i16 117, i16 109, i16 105, i16 100, i16 105, i16 116, i16 121, i16 58], align 1
@_ZZ16OLED_acknowledgevE5text3 = private unnamed_addr constant [11 x i16] [i16 80, i16 117, i16 115, i16 104, i16 32, i16 98, i16 117, i16 116, i16 116, i16 111, i16 110], align 1
@_ZZ16OLED_acknowledgevE5text4 = private unnamed_addr constant [14 x i16] [i16 116, i16 111, i16 32, i16 97, i16 99, i16 107, i16 110, i16 111, i16 119, i16 108, i16 101, i16 100, i16 103, i16 101], align 1
@.str = private unnamed_addr constant [37 x i16] [i16 84, i16 104, i16 101, i16 114, i16 109, i16 111, i16 99, i16 111, i16 117, i16 112, i16 108, i16 101, i16 58, i16 32, i16 79, i16 112, i16 101, i16 110, i16 32, i16 67, i16 105, i16 114, i16 99, i16 117, i16 105, i16 116, i16 32, i16 100, i16 101, i16 116, i16 101, i16 99, i16 116, i16 101, i16 100, i16 10, i16 0], align 1
@.str3 = private unnamed_addr constant [30 x i16] [i16 84, i16 104, i16 101, i16 114, i16 109, i16 111, i16 99, i16 111, i16 117, i16 112, i16 108, i16 101, i16 32, i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 100, i16 101, i16 116, i16 101, i16 99, i16 116, i16 101, i16 100, i16 46, i16 10, i16 0], align 1
@.str4 = private unnamed_addr constant [3 x i16] [i16 32, i16 10, i16 0], align 1
@current_temp = global i16 0, align 1
@humidity = global i16 0, align 1
@btn_press = global i16 0, align 1
@r_encoder = global %struct.rotary_encoder { i16 0, i16 3, i16 0 }, align 1
@profile_index = global i16 1, align 1
@target_temp = global i16 0, align 1
@target_temp_index = global i16 0, align 1
@progress = global i16 0, align 1
@selected_profile = global %struct.profile zeroinitializer, align 1
@progress_scaler = global i16 121, align 1
@temp_ptr = global %struct.profile* @selected_profile, align 1
@print_humidity = global i16 0, align 1
@profile_array = global [3 x [6 x i16]] [[6 x i16] [i16 30, i16 120, i16 210, i16 5, i16 1, i16 2], [6 x i16] [i16 90, i16 180, i16 240, i16 3, i16 0, i16 3], [6 x i16] [i16 90, i16 180, i16 232, i16 2, i16 0, i16 2]], align 1
@thrds_vector = external global i16

define void @_Z7wait_msj(i16 %ms) nounwind {
  %1 = icmp eq i16 %ms, 0
  br i1 %1, label %._crit_edge, label %.preheader

.preheader:                                       ; preds = %0, %12
  %i.08 = phi i16 [ %13, %12 ], [ 0, %0 ]
  br label %2

; <label>:2                                       ; preds = %_Z14sys_clock_waitj.exit5, %.preheader
  %j.07 = phi i16 [ 0, %.preheader ], [ %11, %_Z14sys_clock_waitj.exit5 ]
  %3 = tail call i16 @llvm.XInC2.inp(i16 3) nounwind
  %sum.i.neg = sub i16 17232, %3
  br label %4

; <label>:4                                       ; preds = %4, %2
  %5 = tail call i16 @llvm.XInC2.inp(i16 3) nounwind
  %6 = add i16 %sum.i.neg, %5
  %phitmp.i = icmp slt i16 %6, 0
  br i1 %phitmp.i, label %4, label %_Z14sys_clock_waitj.exit

_Z14sys_clock_waitj.exit:                         ; preds = %4
  %7 = tail call i16 @llvm.XInC2.inp(i16 3) nounwind
  %sum.i3.neg = sub i16 15536, %7
  br label %8

; <label>:8                                       ; preds = %8, %_Z14sys_clock_waitj.exit
  %9 = tail call i16 @llvm.XInC2.inp(i16 3) nounwind
  %10 = add i16 %sum.i3.neg, %9
  %phitmp.i4 = icmp slt i16 %10, 0
  br i1 %phitmp.i4, label %8, label %_Z14sys_clock_waitj.exit5

_Z14sys_clock_waitj.exit5:                        ; preds = %8
  %11 = add i16 %j.07, 1
  %exitcond = icmp eq i16 %11, 1000
  br i1 %exitcond, label %12, label %2

; <label>:12                                      ; preds = %_Z14sys_clock_waitj.exit5
  %13 = add i16 %i.08, 1
  %exitcond9 = icmp eq i16 %13, %ms
  br i1 %exitcond9, label %._crit_edge, label %.preheader

._crit_edge:                                      ; preds = %12, %0
  ret void
}

define void @_Z12wait_secondsj(i16 %seconds) nounwind {
  %1 = icmp eq i16 %seconds, 0
  br i1 %1, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0, %.lr.ph
  %i.02 = phi i16 [ %2, %.lr.ph ], [ 0, %0 ]
  tail call void @_Z7wait_msj(i16 1000)
  %2 = add i16 %i.02, 1
  %exitcond = icmp eq i16 %2, %seconds
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void
}

define void @_Z9long_waitv() nounwind {
  br label %1

; <label>:1                                       ; preds = %_Z14sys_clock_waitj.exit, %0
  %i.02 = phi i16 [ 0, %0 ], [ %6, %_Z14sys_clock_waitj.exit ]
  %2 = tail call i16 @llvm.XInC2.inp(i16 3) nounwind
  %sum.i.neg = sub i16 -10000, %2
  br label %3

; <label>:3                                       ; preds = %3, %1
  %4 = tail call i16 @llvm.XInC2.inp(i16 3) nounwind
  %5 = add i16 %sum.i.neg, %4
  %phitmp.i = icmp slt i16 %5, 0
  br i1 %phitmp.i, label %3, label %_Z14sys_clock_waitj.exit

_Z14sys_clock_waitj.exit:                         ; preds = %3
  %6 = add nsw i16 %i.02, 1
  %exitcond = icmp eq i16 %6, 5000
  br i1 %exitcond, label %7, label %1

; <label>:7                                       ; preds = %_Z14sys_clock_waitj.exit
  ret void
}

define i16 @_Z12Num_To_ASCIIj(i16 %num) nounwind readnone {
  switch i16 %num, label %11 [
    i16 0, label %1
    i16 1, label %2
    i16 2, label %3
    i16 3, label %4
    i16 4, label %5
    i16 5, label %6
    i16 6, label %7
    i16 7, label %8
    i16 8, label %9
    i16 9, label %10
  ]

; <label>:1                                       ; preds = %0
  br label %11

; <label>:2                                       ; preds = %0
  br label %11

; <label>:3                                       ; preds = %0
  br label %11

; <label>:4                                       ; preds = %0
  br label %11

; <label>:5                                       ; preds = %0
  br label %11

; <label>:6                                       ; preds = %0
  br label %11

; <label>:7                                       ; preds = %0
  br label %11

; <label>:8                                       ; preds = %0
  br label %11

; <label>:9                                       ; preds = %0
  br label %11

; <label>:10                                      ; preds = %0
  br label %11

; <label>:11                                      ; preds = %0, %10, %9, %8, %7, %6, %5, %4, %3, %2, %1
  %ascii_index.0 = phi i16 [ 100, %0 ], [ 25, %10 ], [ 24, %9 ], [ 23, %8 ], [ 22, %7 ], [ 21, %6 ], [ 20, %5 ], [ 19, %4 ], [ 18, %3 ], [ 17, %2 ], [ 16, %1 ]
  ret i16 %ascii_index.0
}

define i16 @_Z13char_to_ASCIIc(i16 signext %entry) nounwind readnone {
  %entry.off = add i16 %entry, -97
  %1 = icmp ult i16 %entry.off, 26
  br i1 %1, label %2, label %4

; <label>:2                                       ; preds = %0
  %3 = add nsw i16 %entry, -32
  br label %16

; <label>:4                                       ; preds = %0
  %entry.off17 = add i16 %entry, -65
  %5 = icmp ult i16 %entry.off17, 26
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %4
  %7 = add nsw i16 %entry, -32
  br label %16

; <label>:8                                       ; preds = %4
  %entry.off18 = add i16 %entry, -48
  %9 = icmp ult i16 %entry.off18, 10
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %8
  %11 = add nsw i16 %entry, -32
  br label %16

; <label>:12                                      ; preds = %8
  %13 = icmp sgt i16 %entry, 57
  br i1 %13, label %16, label %14

; <label>:14                                      ; preds = %12
  %entry.off19 = add i16 %entry, -32
  %15 = icmp ult i16 %entry.off19, 16
  %. = select i1 %15, i16 %entry.off19, i16 99
  ret i16 %.

; <label>:16                                      ; preds = %12, %6, %10, %2
  %ascii_index.0 = phi i16 [ %3, %2 ], [ %7, %6 ], [ %11, %10 ], [ 26, %12 ]
  ret i16 %ascii_index.0
}

define void @_Z22OLED_Command_160128RGBh(i16 zeroext %c) nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %2 = and i16 %1, -5
  tail call void @llvm.XInC2.outp(i16 %2, i16 32) nounwind
  %3 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %4 = and i16 %3, -3
  tail call void @llvm.XInC2.outp(i16 %4, i16 32) nounwind
  tail call void @llvm.XInC2.outp(i16 %c, i16 54) nounwind
  %5 = tail call i16 @llvm.XInC2.inp(i16 54) nounwind
  %6 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %7 = or i16 %6, 4
  tail call void @llvm.XInC2.outp(i16 %7, i16 32) nounwind
  ret void
}

define void @_Z19OLED_Data_160128RGBh(i16 zeroext %d) nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %2 = and i16 %1, -5
  tail call void @llvm.XInC2.outp(i16 %2, i16 32) nounwind
  %3 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %4 = or i16 %3, 2
  tail call void @llvm.XInC2.outp(i16 %4, i16 32) nounwind
  tail call void @llvm.XInC2.outp(i16 %d, i16 54) nounwind
  %5 = tail call i16 @llvm.XInC2.inp(i16 54) nounwind
  %6 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %7 = or i16 %6, 4
  tail call void @llvm.XInC2.outp(i16 %7, i16 32) nounwind
  ret void
}

define void @_Z31OLED_SetColumnAddress_160128RGBhh(i16 zeroext %x_start, i16 zeroext %x_end) nounwind {
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 23)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext %x_start)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 24)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext %x_end)
  ret void
}

define void @_Z28OLED_SetRowAddress_160128RGBhh(i16 zeroext %y_start, i16 zeroext %y_end) nounwind {
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 25)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext %y_start)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 26)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext %y_end)
  ret void
}

define void @_Z31OLED_WriteMemoryStart_160128RGBv() nounwind {
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 34)
  ret void
}

define void @_Z20OLED_Pixel_160128RGBm(i32 %color) nounwind {
  %1 = lshr i32 %color, 8
  %2 = trunc i32 %1 to i16
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext %2)
  %3 = trunc i32 %color to i16
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext %3)
  ret void
}

define void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext %x_pos, i16 zeroext %y_pos) nounwind {
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 32)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext %x_pos)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 33)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext %y_pos)
  ret void
}

define void @_Z25OLED_FillScreen_160128RGBm(i32 %colour) nounwind {
  tail call void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext 0, i16 zeroext 0)
  tail call void @_Z31OLED_WriteMemoryStart_160128RGBv()
  br label %1

; <label>:1                                       ; preds = %1, %0
  %i.02 = phi i16 [ 0, %0 ], [ %2, %1 ]
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %colour)
  %2 = add i16 %i.02, 1
  %exitcond = icmp eq i16 %2, 20480
  br i1 %exitcond, label %3, label %1

; <label>:3                                       ; preds = %1
  ret void
}

define void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %x_pos, i16 zeroext %y_pos, i16 zeroext %letter, i32 %textColour, i32 %backgroundColour) nounwind {
  br label %1

; <label>:1                                       ; preds = %11, %0
  %mask.014 = phi i16 [ 128, %0 ], [ %13, %11 ]
  %i.013 = phi i16 [ 0, %0 ], [ %14, %11 ]
  %.012 = phi i16 [ %y_pos, %0 ], [ %12, %11 ]
  tail call void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext %x_pos, i16 zeroext %.012)
  tail call void @_Z31OLED_WriteMemoryStart_160128RGBv()
  br label %2

; <label>:2                                       ; preds = %9, %1
  %count.011 = phi i16 [ 0, %1 ], [ %10, %9 ]
  %3 = getelementptr inbounds [105 x [5 x i16]]* @Ascii_1, i16 0, i16 %letter, i16 %count.011
  %4 = load i16* %3, align 1, !tbaa !0
  %5 = and i16 %4, %mask.014
  %6 = icmp eq i16 %5, %mask.014
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %2
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %textColour)
  br label %9

; <label>:8                                       ; preds = %2
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %backgroundColour)
  br label %9

; <label>:9                                       ; preds = %7, %8
  %10 = add nsw i16 %count.011, 1
  %exitcond = icmp eq i16 %10, 5
  br i1 %exitcond, label %11, label %2

; <label>:11                                      ; preds = %9
  %12 = add i16 %.012, 1
  %13 = lshr i16 %mask.014, 1
  %14 = add nsw i16 %i.013, 1
  %exitcond15 = icmp eq i16 %14, 8
  br i1 %exitcond15, label %15, label %1

; <label>:15                                      ; preds = %11
  ret void
}

define void @_Z21OLED_Text2x_160128RGBhhhmm(i16 zeroext %x_pos, i16 zeroext %y_pos, i16 zeroext %letter, i32 %textColor, i32 %backgroundColor) nounwind {
  br label %1

; <label>:1                                       ; preds = %12, %0
  %mask.015 = phi i16 [ 128, %0 ], [ %.mask.0, %12 ]
  %i.014 = phi i16 [ 1, %0 ], [ %16, %12 ]
  %.013 = phi i16 [ %y_pos, %0 ], [ %13, %12 ]
  tail call void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext %x_pos, i16 zeroext %.013)
  tail call void @_Z31OLED_WriteMemoryStart_160128RGBv()
  br label %2

; <label>:2                                       ; preds = %10, %1
  %count.012 = phi i16 [ 0, %1 ], [ %11, %10 ]
  %3 = lshr i16 %count.012, 1
  %4 = getelementptr inbounds [105 x [5 x i16]]* @Ascii_1, i16 0, i16 %letter, i16 %3
  %5 = load i16* %4, align 1, !tbaa !0
  %6 = and i16 %5, %mask.015
  %7 = icmp eq i16 %6, %mask.015
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %2
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %textColor)
  br label %10

; <label>:9                                       ; preds = %2
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %backgroundColor)
  br label %10

; <label>:10                                      ; preds = %8, %9
  %11 = add i16 %count.012, 1
  %exitcond = icmp eq i16 %11, 10
  br i1 %exitcond, label %12, label %2

; <label>:12                                      ; preds = %10
  %13 = add i16 %.013, 1
  %14 = and i16 %i.014, 1
  %15 = xor i16 %14, 1
  %.mask.0 = lshr i16 %mask.015, %15
  %16 = add nsw i16 %i.014, 1
  %exitcond16 = icmp eq i16 %16, 17
  br i1 %exitcond16, label %17, label %1

; <label>:17                                      ; preds = %12
  ret void
}

define void @_Z16Clear_Data_Charshhm(i16 zeroext %x_pos, i16 zeroext %y_pos, i32 %backgroundColour) nounwind {
  tail call void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext %x_pos, i16 zeroext %y_pos)
  tail call void @_Z31OLED_WriteMemoryStart_160128RGBv()
  br label %.preheader

.preheader:                                       ; preds = %7, %0
  %i.013 = phi i16 [ 0, %0 ], [ %9, %7 ]
  %.012 = phi i16 [ %x_pos, %0 ], [ %8, %7 ]
  br label %1

; <label>:1                                       ; preds = %4, %.preheader
  %j.011 = phi i16 [ 0, %.preheader ], [ %6, %4 ]
  %y_temp.010 = phi i16 [ %y_pos, %.preheader ], [ %5, %4 ]
  tail call void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext %.012, i16 zeroext %y_temp.010)
  tail call void @_Z31OLED_WriteMemoryStart_160128RGBv()
  br label %2

; <label>:2                                       ; preds = %2, %1
  %k.09 = phi i16 [ 0, %1 ], [ %3, %2 ]
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %backgroundColour)
  %3 = add i16 %k.09, 1
  %exitcond = icmp eq i16 %3, 5
  br i1 %exitcond, label %4, label %2

; <label>:4                                       ; preds = %2
  %5 = add i16 %y_temp.010, 1
  %6 = add i16 %j.011, 1
  %exitcond14 = icmp eq i16 %6, 8
  br i1 %exitcond14, label %7, label %1

; <label>:7                                       ; preds = %4
  %8 = add i16 %.012, 7
  %9 = add i16 %i.013, 1
  %exitcond15 = icmp eq i16 %9, 7
  br i1 %exitcond15, label %10, label %.preheader

; <label>:10                                      ; preds = %7
  ret void
}

define void @_Z21OLED_Print_Sensor_Valhhjjmm(i16 zeroext %x_pos, i16 zeroext %y_pos, i16 %data, i16 %selection, i32 %textColor, i32 %backgroundColor) nounwind {
  %1 = icmp ult i16 %data, 10
  br i1 %1, label %.thread, label %2

; <label>:2                                       ; preds = %0
  %3 = icmp ult i16 %data, 100
  br i1 %3, label %5, label %12

.thread:                                          ; preds = %0
  %4 = tail call i16 @_Z12Num_To_ASCIIj(i16 %data)
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %x_pos, i16 zeroext %y_pos, i16 zeroext %4, i32 %textColor, i32 %backgroundColor)
  br label %23

; <label>:5                                       ; preds = %2
  %6 = udiv i16 %data, 10
  %7 = urem i16 %6, 10
  %8 = tail call i16 @_Z12Num_To_ASCIIj(i16 %7)
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %x_pos, i16 zeroext %y_pos, i16 zeroext %8, i32 %textColor, i32 %backgroundColor)
  %9 = urem i16 %data, 10
  %10 = tail call i16 @_Z12Num_To_ASCIIj(i16 %9)
  %11 = add i16 %x_pos, 7
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %11, i16 zeroext %y_pos, i16 zeroext %10, i32 %textColor, i32 %backgroundColor)
  br label %23

; <label>:12                                      ; preds = %2
  %13 = udiv i16 %data, 100
  %14 = urem i16 %13, 10
  %15 = tail call i16 @_Z12Num_To_ASCIIj(i16 %14)
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %x_pos, i16 zeroext %y_pos, i16 zeroext %15, i32 %textColor, i32 %backgroundColor)
  %16 = udiv i16 %data, 10
  %17 = urem i16 %16, 10
  %18 = tail call i16 @_Z12Num_To_ASCIIj(i16 %17)
  %19 = add i16 %x_pos, 7
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %19, i16 zeroext %y_pos, i16 zeroext %18, i32 %textColor, i32 %backgroundColor)
  %20 = urem i16 %data, 10
  %21 = tail call i16 @_Z12Num_To_ASCIIj(i16 %20)
  %22 = add i16 %x_pos, 14
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %22, i16 zeroext %y_pos, i16 zeroext %21, i32 %textColor, i32 %backgroundColor)
  br label %23

; <label>:23                                      ; preds = %12, %5, %.thread
  %digits.063 = phi i16 [ 21, %12 ], [ 14, %5 ], [ 7, %.thread ]
  switch i16 %selection, label %33 [
    i16 0, label %24
    i16 1, label %29
  ]

; <label>:24                                      ; preds = %23
  %25 = add i16 %digits.063, %x_pos
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %25, i16 zeroext %y_pos, i16 zeroext 97, i32 %textColor, i32 %backgroundColor)
  %26 = add i16 %25, 7
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %26, i16 zeroext %y_pos, i16 zeroext 35, i32 %textColor, i32 %backgroundColor)
  %27 = add i16 %x_pos, 14
  %28 = add i16 %27, %digits.063
  tail call void @_Z16Clear_Data_Charshhm(i16 zeroext %28, i16 zeroext %y_pos, i32 0)
  br label %33

; <label>:29                                      ; preds = %23
  %30 = add i16 %digits.063, %x_pos
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %30, i16 zeroext %y_pos, i16 zeroext 5, i32 %textColor, i32 %backgroundColor)
  %31 = add i16 %x_pos, 7
  %32 = add i16 %31, %digits.063
  tail call void @_Z16Clear_Data_Charshhm(i16 zeroext %32, i16 zeroext %y_pos, i32 0)
  br label %33

; <label>:33                                      ; preds = %23, %29, %24
  ret void
}

define void @_Z8Draw_Boxhhmmjj(i16 zeroext %x_pos, i16 zeroext %y_pos, i32 %shapeColour, i32 %backgroundColour, i16 %height, i16 %width) nounwind {
  %1 = icmp eq i16 %height, 0
  br i1 %1, label %._crit_edge21, label %.lr.ph20

.lr.ph20:                                         ; preds = %0
  %2 = icmp eq i16 %width, 0
  %3 = add i16 %width, -1
  %4 = add i16 %height, -1
  br label %5

; <label>:5                                       ; preds = %._crit_edge, %.lr.ph20
  %i.018 = phi i16 [ 0, %.lr.ph20 ], [ %18, %._crit_edge ]
  %.017 = phi i16 [ %y_pos, %.lr.ph20 ], [ %17, %._crit_edge ]
  tail call void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext %x_pos, i16 zeroext %.017)
  tail call void @_Z31OLED_WriteMemoryStart_160128RGBv()
  br i1 %2, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %5
  %6 = icmp eq i16 %i.018, 0
  %7 = icmp eq i16 %i.018, %4
  br i1 %6, label %.lr.ph.split.us, label %.lr.ph..lr.ph.split_crit_edge

.lr.ph..lr.ph.split_crit_edge:                    ; preds = %.lr.ph
  br i1 %7, label %.lr.ph.split.split.us, label %.lr.ph.split..lr.ph.split.split_crit_edge

.lr.ph.split.us:                                  ; preds = %.lr.ph
  br i1 %7, label %.lr.ph.split.us.split.us, label %.lr.ph.split.us..lr.ph.split.us.split_crit_edge

.lr.ph.split.us.split.us:                         ; preds = %.lr.ph.split.us.split.us, %.lr.ph.split.us
  %j.015.us.us = phi i16 [ %8, %.lr.ph.split.us.split.us ], [ 0, %.lr.ph.split.us ]
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %shapeColour)
  %8 = add i16 %j.015.us.us, 1
  %exitcond24 = icmp eq i16 %8, %width
  br i1 %exitcond24, label %._crit_edge, label %.lr.ph.split.us.split.us

.lr.ph.split.us..lr.ph.split.us.split_crit_edge:  ; preds = %.lr.ph.split.us..lr.ph.split.us.split_crit_edge, %.lr.ph.split.us
  %j.015.us = phi i16 [ %9, %.lr.ph.split.us..lr.ph.split.us.split_crit_edge ], [ 0, %.lr.ph.split.us ]
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %shapeColour)
  %9 = add i16 %j.015.us, 1
  %exitcond22 = icmp eq i16 %9, %width
  br i1 %exitcond22, label %._crit_edge, label %.lr.ph.split.us..lr.ph.split.us.split_crit_edge

.lr.ph.split.split.us:                            ; preds = %.lr.ph..lr.ph.split_crit_edge, %.lr.ph.split.split.us
  %j.015.us16 = phi i16 [ %10, %.lr.ph.split.split.us ], [ 0, %.lr.ph..lr.ph.split_crit_edge ]
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %shapeColour)
  %10 = add i16 %j.015.us16, 1
  %exitcond23 = icmp eq i16 %10, %width
  br i1 %exitcond23, label %._crit_edge, label %.lr.ph.split.split.us

.lr.ph.split..lr.ph.split.split_crit_edge:        ; preds = %.lr.ph..lr.ph.split_crit_edge, %15
  %j.015 = phi i16 [ %16, %15 ], [ 0, %.lr.ph..lr.ph.split_crit_edge ]
  %11 = icmp eq i16 %j.015, 0
  %12 = icmp eq i16 %j.015, %3
  %or.cond = or i1 %11, %12
  br i1 %or.cond, label %13, label %14

; <label>:13                                      ; preds = %.lr.ph.split..lr.ph.split.split_crit_edge
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %shapeColour)
  br label %15

; <label>:14                                      ; preds = %.lr.ph.split..lr.ph.split.split_crit_edge
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %backgroundColour)
  br label %15

; <label>:15                                      ; preds = %13, %14
  %16 = add i16 %j.015, 1
  %exitcond = icmp eq i16 %16, %width
  br i1 %exitcond, label %._crit_edge, label %.lr.ph.split..lr.ph.split.split_crit_edge

._crit_edge:                                      ; preds = %.lr.ph.split.us..lr.ph.split.us.split_crit_edge, %.lr.ph.split.us.split.us, %15, %.lr.ph.split.split.us, %5
  %17 = add i16 %.017, 1
  %18 = add i16 %i.018, 1
  %exitcond25 = icmp eq i16 %18, %height
  br i1 %exitcond25, label %._crit_edge21, label %5

._crit_edge21:                                    ; preds = %._crit_edge, %0
  ret void
}

define void @_Z8Draw_Barhhmmjjj(i16 zeroext %x_pos, i16 zeroext %y_pos, i32 %shapeColour, i32 %backgroundColour, i16 %height, i16 %maxWidth, i16 %percent) nounwind {
  %1 = mul i16 %percent, %maxWidth
  %2 = udiv i16 %1, 100
  %3 = icmp eq i16 %height, 0
  br i1 %3, label %._crit_edge14, label %.lr.ph13

.lr.ph13:                                         ; preds = %0
  %4 = icmp ugt i16 %1, 99
  br i1 %4, label %.lr.ph.us, label %11

; <label>:5                                       ; preds = %8
  %6 = add i16 %.011.us, 1
  %7 = add i16 %i.010.us, 1
  %exitcond15 = icmp eq i16 %7, %height
  br i1 %exitcond15, label %._crit_edge14, label %.lr.ph.us

; <label>:8                                       ; preds = %.lr.ph.us, %8
  %j.09.us = phi i16 [ 0, %.lr.ph.us ], [ %9, %8 ]
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %shapeColour)
  %9 = add i16 %j.09.us, 1
  %10 = icmp ult i16 %9, %2
  br i1 %10, label %8, label %5

.lr.ph.us:                                        ; preds = %5, %.lr.ph13
  %.011.us = phi i16 [ %6, %5 ], [ %y_pos, %.lr.ph13 ]
  %i.010.us = phi i16 [ %7, %5 ], [ 0, %.lr.ph13 ]
  tail call void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext %x_pos, i16 zeroext %.011.us)
  tail call void @_Z31OLED_WriteMemoryStart_160128RGBv()
  br label %8

; <label>:11                                      ; preds = %11, %.lr.ph13
  %.011 = phi i16 [ %12, %11 ], [ %y_pos, %.lr.ph13 ]
  %i.010 = phi i16 [ %13, %11 ], [ 0, %.lr.ph13 ]
  tail call void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext %x_pos, i16 zeroext %.011)
  tail call void @_Z31OLED_WriteMemoryStart_160128RGBv()
  %12 = add i16 %.011, 1
  %13 = add i16 %i.010, 1
  %exitcond = icmp eq i16 %13, %height
  br i1 %exitcond, label %._crit_edge14, label %11

._crit_edge14:                                    ; preds = %5, %11, %0
  ret void
}

define void @_Z12draw_lil_guyhhmmj(i16 zeroext %x_pos, i16 zeroext %y_pos, i32 %shapeColour, i32 %backgroundColour, i16 %position) nounwind {
  br label %1

; <label>:1                                       ; preds = %12, %0
  %.014 = phi i16 [ %y_pos, %0 ], [ %13, %12 ]
  %i.013 = phi i16 [ 0, %0 ], [ %14, %12 ]
  tail call void @_Z26OLED_SetPosition_160128RGBhh(i16 zeroext %x_pos, i16 zeroext %.014)
  tail call void @_Z31OLED_WriteMemoryStart_160128RGBv()
  %2 = getelementptr inbounds [2 x [24 x i16]]* @_ZZ12draw_lil_guyhhmmjE7lil_guy, i16 0, i16 %position, i16 %i.013
  %3 = load i16* %2, align 1, !tbaa !2
  br label %4

; <label>:4                                       ; preds = %9, %1
  %mask.012 = phi i16 [ 4096, %1 ], [ %10, %9 ]
  %count.011 = phi i16 [ 0, %1 ], [ %11, %9 ]
  %5 = and i16 %3, %mask.012
  %6 = icmp eq i16 %5, %mask.012
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %4
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %shapeColour)
  br label %9

; <label>:8                                       ; preds = %4
  tail call void @_Z20OLED_Pixel_160128RGBm(i32 %backgroundColour)
  br label %9

; <label>:9                                       ; preds = %8, %7
  %10 = lshr i16 %mask.012, 1
  %11 = add nsw i16 %count.011, 1
  %exitcond = icmp eq i16 %11, 13
  br i1 %exitcond, label %12, label %4

; <label>:12                                      ; preds = %9
  %13 = add i16 %.014, 1
  %14 = add nsw i16 %i.013, 1
  %exitcond15 = icmp eq i16 %14, 24
  br i1 %exitcond15, label %15, label %1

; <label>:15                                      ; preds = %12
  ret void
}

declare void @llvm.memcpy.p0i16.p0i16.i16(i16* nocapture, i16* nocapture, i16, i32, i1) nounwind

define void @_Z15OLED_write_textihhPhimm(i16 %charsize, i16 zeroext %x_pos, i16 zeroext %y_pos, i16* nocapture %toWrite, i16 %length, i32 %textColor, i32 %backgroundColor) nounwind {
  %1 = icmp sgt i16 %length, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %2 = icmp eq i16 %charsize, 1
  br i1 %2, label %3, label %.lr.ph..lr.ph.split_crit_edge

; <label>:3                                       ; preds = %.lr.ph, %3
  %i.017.us = phi i16 [ %9, %3 ], [ 0, %.lr.ph ]
  %4 = getelementptr inbounds i16* %toWrite, i16 %i.017.us
  %5 = load i16* %4, align 1, !tbaa !0
  %6 = tail call i16 @_Z13char_to_ASCIIc(i16 signext %5)
  %7 = mul nsw i16 %i.017.us, 7
  %8 = add i16 %7, %x_pos
  tail call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext %8, i16 zeroext %y_pos, i16 zeroext %6, i32 %textColor, i32 %backgroundColor)
  %9 = add nsw i16 %i.017.us, 1
  %exitcond = icmp eq i16 %9, %length
  br i1 %exitcond, label %._crit_edge, label %3

.lr.ph..lr.ph.split_crit_edge:                    ; preds = %.lr.ph, %16
  %i.017 = phi i16 [ %17, %16 ], [ 0, %.lr.ph ]
  %cond = icmp eq i16 %charsize, 2
  br i1 %cond, label %10, label %16

; <label>:10                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %11 = getelementptr inbounds i16* %toWrite, i16 %i.017
  %12 = load i16* %11, align 1, !tbaa !0
  %13 = tail call i16 @_Z13char_to_ASCIIc(i16 signext %12)
  %14 = mul nsw i16 %i.017, 12
  %15 = add i16 %14, %x_pos
  tail call void @_Z21OLED_Text2x_160128RGBhhhmm(i16 zeroext %15, i16 zeroext %y_pos, i16 zeroext %13, i32 %textColor, i32 %backgroundColor)
  br label %16

; <label>:16                                      ; preds = %.lr.ph..lr.ph.split_crit_edge, %10
  %17 = add nsw i16 %i.017, 1
  %18 = icmp slt i16 %17, %length
  br i1 %18, label %.lr.ph..lr.ph.split_crit_edge, label %._crit_edge

._crit_edge:                                      ; preds = %3, %16, %0
  ret void
}

define void @_Z19OLED_Init_160128RGBv() nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %2 = and i16 %1, -2
  tail call void @llvm.XInC2.outp(i16 %2, i16 32) nounwind
  tail call void @_Z7wait_msj(i16 2)
  %3 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %4 = or i16 %3, 1
  tail call void @llvm.XInC2.outp(i16 %4, i16 32) nounwind
  tail call void @_Z7wait_msj(i16 2)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 4)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 1)
  tail call void @_Z7wait_msj(i16 1)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 4)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 0)
  tail call void @_Z7wait_msj(i16 1)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 6)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 0)
  tail call void @_Z7wait_msj(i16 1)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 2)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 1)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 3)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 48)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 40)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 127)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 41)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 0)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 20)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 49)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 22)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 102)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 16)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 69)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 17)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 52)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 18)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 51)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 8)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 4)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 9)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 5)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 10)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 5)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 11)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 157)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 12)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 140)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 13)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 87)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 128)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 0)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 19)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 160)
  tail call void @_Z31OLED_SetColumnAddress_160128RGBhh(i16 zeroext 0, i16 zeroext 159)
  tail call void @_Z28OLED_SetRowAddress_160128RGBhh(i16 zeroext 0, i16 zeroext 127)
  tail call void @_Z22OLED_Command_160128RGBh(i16 zeroext 6)
  tail call void @_Z19OLED_Data_160128RGBh(i16 zeroext 1)
  ret void
}

define void @_Z17OLED_profile_pagej(i16 %selected_profile) nounwind {
  %text = alloca [9 x i16], align 1
  %profile = alloca [1 x i16], align 1
  %text2 = alloca [10 x i16], align 1
  %text3 = alloca [11 x i16], align 1
  %1 = getelementptr inbounds [9 x i16]* %text, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %1, i16* getelementptr inbounds ([9 x i16]* @_ZZ17OLED_profile_pagejE4text, i16 0, i16 0), i16 9, i32 1, i1 false)
  %2 = getelementptr inbounds [1 x i16]* %profile, i16 0, i16 0
  %3 = add i16 %selected_profile, 48
  store i16 %3, i16* %2, align 1, !tbaa !0
  call void @_Z15OLED_write_textihhPhimm(i16 2, i16 zeroext 5, i16 zeroext 100, i16* %1, i16 9, i32 65535, i32 0)
  call void @_Z15OLED_write_textihhPhimm(i16 2, i16 zeroext 120, i16 zeroext 100, i16* %2, i16 1, i32 65535, i32 0)
  %4 = getelementptr inbounds [10 x i16]* %text2, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %4, i16* getelementptr inbounds ([10 x i16]* @_ZZ17OLED_profile_pagejE5text2, i16 0, i16 0), i16 10, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 20, i16 zeroext 77, i16* %4, i16 10, i32 65535, i32 0)
  %5 = getelementptr inbounds [11 x i16]* %text3, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %5, i16* getelementptr inbounds ([11 x i16]* @_ZZ17OLED_profile_pagejE5text3, i16 0, i16 0), i16 11, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 20, i16 zeroext 64, i16* %5, i16 11, i32 65535, i32 0)
  call void @_Z21OLED_Text2x_160128RGBhhhmm(i16 zeroext 15, i16 zeroext 15, i16 zeroext 98, i32 65535, i32 0)
  call void @_Z21OLED_Text2x_160128RGBhhhmm(i16 zeroext 133, i16 zeroext 15, i16 zeroext 99, i32 65535, i32 0)
  %6 = and i16 %selected_profile, 1
  %7 = icmp eq i16 %6, 0
  call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext 80, i16 zeroext 26, i16 zeroext 100, i32 65535, i32 0)
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext 80, i16 zeroext 18, i16 zeroext 101, i32 65535, i32 0)
  call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext 80, i16 zeroext 10, i16 zeroext 102, i32 65535, i32 0)
  br label %10

; <label>:9                                       ; preds = %0
  call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext 80, i16 zeroext 18, i16 zeroext 103, i32 65535, i32 0)
  call void @_Z19OLED_Text_160128RGBhhhmm(i16 zeroext 80, i16 zeroext 10, i16 zeroext 104, i32 65535, i32 0)
  br label %10

; <label>:10                                      ; preds = %9, %8
  ret void
}

define void @_Z18OLED_profile_timesPj(i16* nocapture %selected_profile_array) nounwind {
  %text4 = alloca [13 x i16], align 1
  %text = alloca [1 x i16], align 1
  %1 = getelementptr inbounds [13 x i16]* %text4, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %1, i16* getelementptr inbounds ([13 x i16]* @_ZZ18OLED_profile_timesPjE5text4, i16 0, i16 0), i16 13, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 20, i16 zeroext 51, i16* %1, i16 13, i32 65535, i32 0)
  %2 = load i16* %selected_profile_array, align 1, !tbaa !2
  call void @_Z21OLED_Print_Sensor_Valhhjjmm(i16 zeroext 97, i16 zeroext 77, i16 %2, i16 3, i32 63488, i32 0)
  %3 = getelementptr inbounds i16* %selected_profile_array, i16 1
  %4 = load i16* %3, align 1, !tbaa !2
  call void @_Z21OLED_Print_Sensor_Valhhjjmm(i16 zeroext 104, i16 zeroext 64, i16 %4, i16 3, i32 63488, i32 0)
  %5 = getelementptr inbounds i16* %selected_profile_array, i16 2
  %6 = load i16* %5, align 1, !tbaa !2
  call void @_Z21OLED_Print_Sensor_Valhhjjmm(i16 zeroext 118, i16 zeroext 51, i16 %6, i16 3, i32 63488, i32 0)
  %7 = getelementptr inbounds [1 x i16]* %text, i16 0, i16 0
  store i16 115, i16* %7, align 1
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 118, i16 zeroext 77, i16* %7, i16 1, i32 65535, i32 0)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 125, i16 zeroext 64, i16* %7, i16 1, i32 65535, i32 0)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 139, i16 zeroext 51, i16* %7, i16 1, i32 65535, i32 0)
  ret void
}

define void @_Z18OLED_starting_pagev() nounwind {
  %text1 = alloca i128, align 8
  %text2 = alloca i128, align 8
  call void @_Z25OLED_FillScreen_160128RGBm(i32 0)
  store i128 368659256840902008625448884427292755, i128* %text1, align 8
  store i128 238849300093255730692579094302097490, i128* %text2, align 8
  %1 = bitcast i128* %text1 to i16*
  call void @_Z15OLED_write_textihhPhimm(i16 2, i16 zeroext 5, i16 zeroext 83, i16* %1, i16 8, i32 7936, i32 0)
  %2 = bitcast i128* %text2 to i16*
  call void @_Z15OLED_write_textihhPhimm(i16 2, i16 zeroext 5, i16 zeroext 31, i16* %2, i16 8, i32 7936, i32 0)
  ret void
}

define void @_Z21OLED_display_progressj(i16 %selected_profile) nounwind {
  %arr1 = alloca [9 x i16], align 1
  %profile = alloca [1 x i16], align 1
  %arr_progress = alloca [9 x i16], align 1
  %arr_temp = alloca [12 x i16], align 1
  %arr_hum = alloca [9 x i16], align 1
  call void @_Z19OLED_Init_160128RGBv()
  call void @_Z25OLED_FillScreen_160128RGBm(i32 0)
  %1 = getelementptr inbounds [9 x i16]* %arr1, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %1, i16* getelementptr inbounds ([9 x i16]* @_ZZ21OLED_display_progressjE4arr1, i16 0, i16 0), i16 9, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 5, i16 zeroext 105, i16* %1, i16 8, i32 65535, i32 0)
  %2 = getelementptr inbounds [1 x i16]* %profile, i16 0, i16 0
  %3 = add i16 %selected_profile, 48
  store i16 %3, i16* %2, align 1, !tbaa !0
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 101, i16 zeroext 105, i16* %2, i16 1, i32 65535, i32 0)
  %4 = getelementptr inbounds [9 x i16]* %arr_progress, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %4, i16* getelementptr inbounds ([9 x i16]* @_ZZ21OLED_display_progressjE12arr_progress, i16 0, i16 0), i16 9, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 20, i16 zeroext 50, i16* %4, i16 9, i32 65535, i32 0)
  %5 = getelementptr inbounds [12 x i16]* %arr_temp, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %5, i16* getelementptr inbounds ([12 x i16]* @_ZZ21OLED_display_progressjE8arr_temp, i16 0, i16 0), i16 12, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 20, i16 zeroext 30, i16* %5, i16 12, i32 65535, i32 0)
  %6 = getelementptr inbounds [9 x i16]* %arr_hum, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %6, i16* getelementptr inbounds ([9 x i16]* @_ZZ20OLED_display_warningvE7arr_hum, i16 0, i16 0), i16 9, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 20, i16 zeroext 10, i16* %6, i16 9, i32 65535, i32 0)
  call void @_Z8Draw_Boxhhmmjj(i16 zeroext 20, i16 zeroext 70, i32 63488, i32 0, i16 30, i16 128)
  call void @_Z8Draw_Barhhmmjjj(i16 zeroext 23, i16 zeroext 73, i32 63488, i32 undef, i16 24, i16 122, i16 0)
  ret void
}

define void @_Z20OLED_update_humidityj(i16 %humidity) nounwind {
  tail call void @_Z21OLED_Print_Sensor_Valhhjjmm(i16 zeroext 83, i16 zeroext 10, i16 %humidity, i16 1, i32 65535, i32 0)
  ret void
}

define void @_Z16OLED_update_tempi(i16 %temp) nounwind {
  tail call void @_Z21OLED_Print_Sensor_Valhhjjmm(i16 zeroext 104, i16 zeroext 30, i16 %temp, i16 0, i32 65535, i32 0)
  ret void
}

define void @_Z20OLED_update_progressi(i16 %progress) nounwind {
  tail call void @_Z21OLED_Print_Sensor_Valhhjjmm(i16 zeroext 83, i16 zeroext 50, i16 %progress, i16 1, i32 65535, i32 0)
  tail call void @_Z8Draw_Barhhmmjjj(i16 zeroext 23, i16 zeroext 73, i32 63488, i32 undef, i16 26, i16 122, i16 %progress)
  ret void
}

define void @_Z17OLED_end_progressv() nounwind {
  %text = alloca [9 x i16], align 1
  %text2 = alloca [14 x i16], align 1
  %1 = getelementptr inbounds [9 x i16]* %text, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %1, i16* getelementptr inbounds ([9 x i16]* @_ZZ17OLED_end_progressvE4text, i16 0, i16 0), i16 9, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 2, i16 zeroext 5, i16 zeroext 100, i16* %1, i16 9, i32 65535, i32 0)
  %2 = getelementptr inbounds [14 x i16]* %text2, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %2, i16* getelementptr inbounds ([14 x i16]* @_ZZ17OLED_end_progressvE5text2, i16 0, i16 0), i16 14, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 5, i16 zeroext 75, i16* %2, i16 14, i32 65535, i32 0)
  ret void
}

define void @_Z20OLED_display_warningv() nounwind {
  %text = alloca [7 x i16], align 1
  %text1 = alloca [19 x i16], align 1
  %text2 = alloca [12 x i16], align 1
  %arr_hum = alloca [9 x i16], align 1
  %1 = getelementptr inbounds [7 x i16]* %text, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %1, i16* getelementptr inbounds ([7 x i16]* @_ZZ20OLED_display_warningvE4text, i16 0, i16 0), i16 7, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 2, i16 zeroext 9, i16 zeroext 98, i16* %1, i16 7, i32 31, i32 0)
  %2 = getelementptr inbounds [19 x i16]* %text1, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %2, i16* getelementptr inbounds ([19 x i16]* @_ZZ20OLED_display_warningvE5text1, i16 0, i16 0), i16 19, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 9, i16 zeroext 83, i16* %2, i16 19, i32 65535, i32 0)
  %3 = getelementptr inbounds [12 x i16]* %text2, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %3, i16* getelementptr inbounds ([12 x i16]* @_ZZ20OLED_display_warningvE5text2, i16 0, i16 0), i16 12, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 9, i16 zeroext 71, i16* %3, i16 12, i32 65535, i32 0)
  %4 = getelementptr inbounds [9 x i16]* %arr_hum, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %4, i16* getelementptr inbounds ([9 x i16]* @_ZZ20OLED_display_warningvE7arr_hum, i16 0, i16 0), i16 9, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 20, i16 zeroext 10, i16* %4, i16 9, i32 65535, i32 0)
  ret void
}

define void @_Z16OLED_acknowledgev() nounwind {
  %text3 = alloca [11 x i16], align 1
  %text4 = alloca [14 x i16], align 1
  %1 = getelementptr inbounds [11 x i16]* %text3, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %1, i16* getelementptr inbounds ([11 x i16]* @_ZZ16OLED_acknowledgevE5text3, i16 0, i16 0), i16 11, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 9, i16 zeroext 42, i16* %1, i16 11, i32 63488, i32 0)
  %2 = getelementptr inbounds [14 x i16]* %text4, i16 0, i16 0
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %2, i16* getelementptr inbounds ([14 x i16]* @_ZZ16OLED_acknowledgevE5text4, i16 0, i16 0), i16 14, i32 1, i1 false)
  call void @_Z15OLED_write_textihhPhimm(i16 1, i16 zeroext 9, i16 zeroext 30, i16* %2, i16 14, i32 63488, i32 0)
  ret void
}

define void @_Z21thermocouple_pin_initv() nounwind {
  tail call void @llvm.XInC2.outp(i16 512, i16 51) nounwind
  %1 = tail call i16 @llvm.XInC2.inp(i16 50) nounwind
  %2 = or i16 %1, 2
  tail call void @llvm.XInC2.outp(i16 %2, i16 50) nounwind
  ret void
}

define i16 @_Z13readUpperDatav() nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 50) nounwind
  %2 = and i16 %1, -3
  tail call void @llvm.XInC2.outp(i16 %2, i16 50) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 54) nounwind
  %3 = tail call i16 @llvm.XInC2.inp(i16 54) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 54) nounwind
  %4 = tail call i16 @llvm.XInC2.inp(i16 54) nounwind
  %5 = shl i16 %3, 8
  %6 = or i16 %4, %5
  %7 = tail call i16 @llvm.XInC2.inp(i16 50) nounwind
  %8 = or i16 %7, 2
  tail call void @llvm.XInC2.outp(i16 %8, i16 50) nounwind
  ret i16 %6
}

define i16 @_Z13readLowerDatav() nounwind {
.preheader:
  %0 = tail call i16 @llvm.XInC2.inp(i16 50) nounwind
  %1 = and i16 %0, -3
  tail call void @llvm.XInC2.outp(i16 %1, i16 50) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 54) nounwind
  %2 = tail call i16 @llvm.XInC2.inp(i16 54) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 54) nounwind
  %3 = tail call i16 @llvm.XInC2.inp(i16 54) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 54) nounwind
  %4 = tail call i16 @llvm.XInC2.inp(i16 54) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 54) nounwind
  %5 = tail call i16 @llvm.XInC2.inp(i16 54) nounwind
  %6 = shl i16 %4, 8
  %7 = or i16 %5, %6
  %8 = tail call i16 @llvm.XInC2.inp(i16 50) nounwind
  %9 = or i16 %8, 2
  tail call void @llvm.XInC2.outp(i16 %9, i16 50) nounwind
  ret i16 %7
}

define i16 @_Z7isFaultv() nounwind {
  %1 = tail call i16 @_Z13readUpperDatav()
  %2 = and i16 %1, 1
  ret i16 %2
}

define i16 @_Z8getFaultv() nounwind {
  %1 = tail call i16 @_Z13readLowerDatav()
  %2 = and i16 %1, 1
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call void asm sideeffect "\09jsr\09r6, XPD_EchoString", "{R1},~{R1},~{R6}"(i16* getelementptr inbounds ([37 x i16]* @.str, i16 0, i16 0)) nounwind, !srcloc !3
  br label %5

; <label>:5                                       ; preds = %0, %4
  %.0 = phi i16 [ 1, %4 ], [ 0, %0 ]
  ret i16 %.0
}

define i16 @_Z7getTempv() nounwind {
  %1 = tail call i16 @_Z13readUpperDatav()
  %2 = and i16 %1, 1
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  tail call void asm sideeffect "\09jsr\09r6, XPD_EchoString", "{R1},~{R1},~{R6}"(i16* getelementptr inbounds ([30 x i16]* @.str3, i16 0, i16 0)) nounwind, !srcloc !3
  %5 = tail call i16 @_Z8getFaultv()
  br label %8

; <label>:6                                       ; preds = %0
  %7 = lshr i16 %1, 4
  br label %8

; <label>:8                                       ; preds = %6, %4
  %temperature.0 = phi i16 [ 0, %4 ], [ %7, %6 ]
  ret i16 %temperature.0
}

define i16 @_Z10getAMBTempv() nounwind {
  %1 = tail call i16 @_Z13readLowerDatav()
  %2 = lshr i16 %1, 8
  ret i16 %2
}

define void @_Z20timer_initializationv() nounwind {
  tail call void @llvm.XInC2.outp(i16 91, i16 62) nounwind
  tail call void @llvm.XInC2.outp(i16 2, i16 67) nounwind
  tail call void @llvm.XInC2.outp(i16 2, i16 69) nounwind
  tail call void @llvm.XInC2.outp(i16 -17536, i16 64) nounwind
  tail call void @llvm.XInC2.outp(i16 24000, i16 66) nounwind
  tail call void @llvm.XInC2.outp(i16 -17536, i16 68) nounwind
  ret void
}

define i16 @_Z9check_pidj(i16 %pid_status) nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 62) nounwind
  %2 = tail call i16 @llvm.XInC2.inp(i16 67) nounwind
  %3 = or i16 %2, %1
  %.lobit = lshr i16 %3, 15
  ret i16 %.lobit
}

define void @_Z18set_pid_parametersP3Pidjjj(%struct.Pid* nocapture %pid, i16 %kp_val, i16 %ki_val, i16 %kd_val) nounwind {
  %1 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 0
  store i16 %kp_val, i16* %1, align 1, !tbaa !2
  %2 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 1
  store i16 %ki_val, i16* %2, align 1, !tbaa !2
  %3 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 2
  store i16 %kd_val, i16* %3, align 1, !tbaa !2
  %4 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 3
  store i16 0, i16* %4, align 1, !tbaa !2
  %5 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 4
  store i16 0, i16* %5, align 1, !tbaa !2
  %6 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 5
  store i16 2000, i16* %6, align 1, !tbaa !2
  ret void
}

define i16 @_Z11pid_computeP3Pidjj(%struct.Pid* nocapture %pid, i16 %target_temp, i16 %measured_temp) nounwind {
  %1 = sub i16 %target_temp, %measured_temp
  %2 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 4
  %3 = load i16* %2, align 1, !tbaa !2
  %4 = add nsw i16 %3, %1
  %5 = icmp sgt i16 %4, 210
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  store i16 210, i16* %2, align 1, !tbaa !2
  br label %11

; <label>:7                                       ; preds = %0
  %8 = icmp slt i16 %4, -210
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %7
  store i16 -210, i16* %2, align 1, !tbaa !2
  br label %11

; <label>:10                                      ; preds = %7
  store i16 %4, i16* %2, align 1, !tbaa !2
  br label %11

; <label>:11                                      ; preds = %9, %10, %6
  %12 = phi i16 [ -210, %9 ], [ %4, %10 ], [ 210, %6 ]
  %13 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 3
  %14 = load i16* %13, align 1, !tbaa !2
  %15 = sub nsw i16 %1, %14
  store i16 %1, i16* %13, align 1, !tbaa !2
  %16 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 0
  %17 = load i16* %16, align 1, !tbaa !2
  %18 = mul i16 %17, %1
  %19 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 1
  %20 = load i16* %19, align 1, !tbaa !2
  %21 = mul i16 %12, %20
  %22 = add i16 %21, %18
  %23 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 2
  %24 = load i16* %23, align 1, !tbaa !2
  %25 = mul i16 %24, %15
  %26 = add i16 %22, %25
  %27 = getelementptr inbounds %struct.Pid* %pid, i16 0, i32 5
  %28 = load i16* %27, align 1, !tbaa !2
  %29 = icmp sgt i16 %26, %28
  br i1 %29, label %32, label %30

; <label>:30                                      ; preds = %11
  %31 = icmp slt i16 %26, 0
  %. = select i1 %31, i16 0, i16 %26
  ret i16 %.

; <label>:32                                      ; preds = %11
  ret i16 %28
}

define void @_Z14heating_actionj(i16 %duration) nounwind {
  %1 = mul i16 %duration, 24
  %2 = tail call i16 @llvm.XInC2.inp(i16 63) nounwind
  %3 = icmp ult i16 %1, %2
  %4 = tail call i16 @llvm.XInC2.inp(i16 38) nounwind
  br i1 %3, label %7, label %5

; <label>:5                                       ; preds = %0
  %6 = or i16 %4, 96
  tail call void @llvm.XInC2.outp(i16 %6, i16 38) nounwind
  br label %9

; <label>:7                                       ; preds = %0
  %8 = and i16 %4, -97
  tail call void @llvm.XInC2.outp(i16 %8, i16 38) nounwind
  br label %9

; <label>:9                                       ; preds = %7, %5
  ret void
}

define i16 @_Z11button_readv() nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 46) nounwind
  %2 = lshr i16 %1, 2
  %.lobit = and i16 %2, 1
  %3 = xor i16 %.lobit, 1
  ret i16 %3
}

define void @_Z15get_encoder_pos14rotary_encoder(%struct.rotary_encoder* noalias nocapture sret %agg.result, %struct.rotary_encoder* nocapture byval %encoder1) nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 46) nounwind
  %2 = and i16 %1, 2
  %3 = tail call i16 @llvm.XInC2.inp(i16 46) nounwind
  %4 = and i16 %3, 1
  %5 = or i16 %4, %2
  %6 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 1
  %7 = load volatile i16* %6, align 1, !tbaa !0
  %8 = icmp eq i16 %5, %7
  br i1 %8, label %48, label %9

; <label>:9                                       ; preds = %0
  %10 = load volatile i16* %6, align 1, !tbaa !0
  switch i16 %10, label %47 [
    i16 0, label %11
    i16 1, label %20
    i16 2, label %29
    i16 3, label %38
  ]

; <label>:11                                      ; preds = %9
  switch i16 %5, label %47 [
    i16 1, label %12
    i16 2, label %16
  ]

; <label>:12                                      ; preds = %11
  %13 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 0
  %14 = load volatile i16* %13, align 1, !tbaa !0
  %15 = add nsw i16 %14, 1
  store volatile i16 %15, i16* %13, align 1, !tbaa !0
  br label %47

; <label>:16                                      ; preds = %11
  %17 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 0
  %18 = load volatile i16* %17, align 1, !tbaa !0
  %19 = add nsw i16 %18, -1
  store volatile i16 %19, i16* %17, align 1, !tbaa !0
  br label %47

; <label>:20                                      ; preds = %9
  switch i16 %5, label %47 [
    i16 3, label %21
    i16 0, label %25
  ]

; <label>:21                                      ; preds = %20
  %22 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 0
  %23 = load volatile i16* %22, align 1, !tbaa !0
  %24 = add nsw i16 %23, 1
  store volatile i16 %24, i16* %22, align 1, !tbaa !0
  br label %47

; <label>:25                                      ; preds = %20
  %26 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 0
  %27 = load volatile i16* %26, align 1, !tbaa !0
  %28 = add nsw i16 %27, -1
  store volatile i16 %28, i16* %26, align 1, !tbaa !0
  br label %47

; <label>:29                                      ; preds = %9
  switch i16 %5, label %47 [
    i16 0, label %30
    i16 3, label %34
  ]

; <label>:30                                      ; preds = %29
  %31 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 0
  %32 = load volatile i16* %31, align 1, !tbaa !0
  %33 = add nsw i16 %32, 1
  store volatile i16 %33, i16* %31, align 1, !tbaa !0
  br label %47

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 0
  %36 = load volatile i16* %35, align 1, !tbaa !0
  %37 = add nsw i16 %36, -1
  store volatile i16 %37, i16* %35, align 1, !tbaa !0
  br label %47

; <label>:38                                      ; preds = %9
  switch i16 %5, label %47 [
    i16 2, label %39
    i16 1, label %43
  ]

; <label>:39                                      ; preds = %38
  %40 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 0
  %41 = load volatile i16* %40, align 1, !tbaa !0
  %42 = add nsw i16 %41, 1
  store volatile i16 %42, i16* %40, align 1, !tbaa !0
  br label %47

; <label>:43                                      ; preds = %38
  %44 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 0
  %45 = load volatile i16* %44, align 1, !tbaa !0
  %46 = add nsw i16 %45, -1
  store volatile i16 %46, i16* %44, align 1, !tbaa !0
  br label %47

; <label>:47                                      ; preds = %39, %30, %21, %12, %38, %29, %20, %11, %43, %34, %25, %16, %9
  store volatile i16 %5, i16* %6, align 1, !tbaa !0
  br label %48

; <label>:48                                      ; preds = %0, %47
  %49 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 0
  %50 = load volatile i16* %49, align 1, !tbaa !0
  %51 = icmp sgt i16 %50, 3
  br i1 %51, label %52, label %54

; <label>:52                                      ; preds = %48
  %53 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 2
  store volatile i16 1, i16* %53, align 1, !tbaa !2
  store volatile i16 0, i16* %49, align 1, !tbaa !0
  br label %59

; <label>:54                                      ; preds = %48
  %55 = load volatile i16* %49, align 1, !tbaa !0
  %56 = icmp slt i16 %55, -3
  br i1 %56, label %57, label %59

; <label>:57                                      ; preds = %54
  %58 = getelementptr inbounds %struct.rotary_encoder* %encoder1, i16 0, i32 2
  store volatile i16 2, i16* %58, align 1, !tbaa !2
  store volatile i16 0, i16* %49, align 1, !tbaa !0
  br label %59

; <label>:59                                      ; preds = %54, %57, %52
  %60 = getelementptr inbounds %struct.rotary_encoder* %agg.result, i16 0, i32 0
  tail call void @llvm.memcpy.p0i16.p0i16.i16(i16* %60, i16* %49, i16 3, i32 1, i1 false), !tbaa.struct !4
  ret void
}

define void @_Z21generate_RSS_profile1P7profile(%struct.profile* nocapture %temp_profile) nounwind {
  %1 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 0
  store volatile i16 25, i16* %1, align 1, !tbaa !2
  br label %2

; <label>:2                                       ; preds = %2, %0
  %i.074 = phi i16 [ 1, %0 ], [ %4, %2 ]
  %target_temp.072 = phi i16 [ 30, %0 ], [ %5, %2 ]
  %3 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i.074
  store volatile i16 %target_temp.072, i16* %3, align 1, !tbaa !2
  %4 = add nsw i16 %i.074, 1
  %5 = add i16 %target_temp.072, 5
  %exitcond80 = icmp eq i16 %4, 16
  br i1 %exitcond80, label %.lr.ph68, label %2

.lr.ph68:                                         ; preds = %2, %.lr.ph68
  %i1.066 = phi i16 [ %7, %.lr.ph68 ], [ 16, %2 ]
  %target_temp.164 = phi i16 [ %8, %.lr.ph68 ], [ 101, %2 ]
  %6 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i1.066
  store volatile i16 %target_temp.164, i16* %6, align 1, !tbaa !2
  %7 = add nsw i16 %i1.066, 1
  %8 = add i16 %target_temp.164, 1
  %exitcond79 = icmp eq i16 %7, 61
  br i1 %exitcond79, label %.lr.ph60, label %.lr.ph68

.lr.ph60:                                         ; preds = %.lr.ph68, %.lr.ph60
  %i2.058 = phi i16 [ %10, %.lr.ph60 ], [ 61, %.lr.ph68 ]
  %target_temp.256 = phi i16 [ %11, %.lr.ph60 ], [ 147, %.lr.ph68 ]
  %9 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i2.058
  store volatile i16 %target_temp.256, i16* %9, align 1, !tbaa !2
  %10 = add nsw i16 %i2.058, 1
  %11 = add i16 %target_temp.256, 2
  %exitcond77 = icmp eq i16 %10, 106
  br i1 %exitcond77, label %.lr.ph54, label %.lr.ph60

.lr.ph54:                                         ; preds = %.lr.ph60, %.lr.ph54
  %i3.052 = phi i16 [ %13, %.lr.ph54 ], [ 106, %.lr.ph60 ]
  %12 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i3.052
  store volatile i16 235, i16* %12, align 1, !tbaa !2
  %13 = add nsw i16 %i3.052, 1
  %exitcond75 = icmp eq i16 %13, 111
  br i1 %exitcond75, label %.lr.ph, label %.lr.ph54

.lr.ph:                                           ; preds = %.lr.ph54, %.lr.ph
  %i4.050 = phi i16 [ %15, %.lr.ph ], [ 111, %.lr.ph54 ]
  %target_temp.348 = phi i16 [ %16, %.lr.ph ], [ 230, %.lr.ph54 ]
  %14 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i4.050
  store volatile i16 %target_temp.348, i16* %14, align 1, !tbaa !2
  %15 = add nsw i16 %i4.050, 1
  %16 = add i16 %target_temp.348, -5
  %exitcond = icmp eq i16 %15, 141
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph
  ret void
}

define void @_Z21generate_RSS_profile2P7profile(%struct.profile* nocapture %temp_profile) nounwind {
  %1 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 0
  store volatile i16 25, i16* %1, align 1, !tbaa !2
  br label %2

; <label>:2                                       ; preds = %2, %0
  %i.070 = phi i16 [ 1, %0 ], [ %4, %2 ]
  %target_temp.068 = phi i16 [ 28, %0 ], [ %5, %2 ]
  %3 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i.070
  store volatile i16 %target_temp.068, i16* %3, align 1, !tbaa !2
  %4 = add nsw i16 %i.070, 1
  %5 = add i16 %target_temp.068, 3
  %exitcond76 = icmp eq i16 %4, 46
  br i1 %exitcond76, label %.lr.ph66, label %2

.lr.ph66:                                         ; preds = %2, %.lr.ph66
  %i1.064 = phi i16 [ %7, %.lr.ph66 ], [ 46, %2 ]
  %6 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i1.064
  store volatile i16 160, i16* %6, align 1, !tbaa !2
  %7 = add nsw i16 %i1.064, 1
  %exitcond74 = icmp eq i16 %7, 91
  br i1 %exitcond74, label %.lr.ph59, label %.lr.ph66

.lr.ph59:                                         ; preds = %.lr.ph66, %.lr.ph59
  %i2.058 = phi i16 [ %9, %.lr.ph59 ], [ 91, %.lr.ph66 ]
  %target_temp.256 = phi i16 [ %10, %.lr.ph59 ], [ 163, %.lr.ph66 ]
  %8 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i2.058
  store volatile i16 %target_temp.256, i16* %8, align 1, !tbaa !2
  %9 = add nsw i16 %i2.058, 1
  %10 = add i16 %target_temp.256, 3
  %exitcond73 = icmp eq i16 %9, 121
  br i1 %exitcond73, label %.lr.ph54, label %.lr.ph59

.lr.ph54:                                         ; preds = %.lr.ph59, %.lr.ph54
  %i3.052 = phi i16 [ %12, %.lr.ph54 ], [ 121, %.lr.ph59 ]
  %11 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i3.052
  store volatile i16 250, i16* %11, align 1, !tbaa !2
  %12 = add nsw i16 %i3.052, 1
  %exitcond71 = icmp eq i16 %12, 126
  br i1 %exitcond71, label %.lr.ph, label %.lr.ph54

.lr.ph:                                           ; preds = %.lr.ph54, %.lr.ph
  %i4.050 = phi i16 [ %14, %.lr.ph ], [ 126, %.lr.ph54 ]
  %target_temp.348 = phi i16 [ %15, %.lr.ph ], [ 245, %.lr.ph54 ]
  %13 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i4.050
  store volatile i16 %target_temp.348, i16* %13, align 1, !tbaa !2
  %14 = add nsw i16 %i4.050, 1
  %15 = add i16 %target_temp.348, -5
  %exitcond = icmp eq i16 %14, 141
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph
  ret void
}

define void @_Z21generate_RSS_profile3P7profile(%struct.profile* nocapture %temp_profile) nounwind {
  %1 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 0
  store volatile i16 25, i16* %1, align 1, !tbaa !2
  br label %2

; <label>:2                                       ; preds = %2, %0
  %i.074 = phi i16 [ 1, %0 ], [ %4, %2 ]
  %target_temp.072 = phi i16 [ 27, %0 ], [ %5, %2 ]
  %3 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i.074
  store volatile i16 %target_temp.072, i16* %3, align 1, !tbaa !2
  %4 = add nsw i16 %i.074, 1
  %5 = add i16 %target_temp.072, 2
  %exitcond81 = icmp eq i16 %4, 46
  br i1 %exitcond81, label %.lr.ph70, label %2

.lr.ph70:                                         ; preds = %2, %.lr.ph70
  %i1.068 = phi i16 [ %7, %.lr.ph70 ], [ 46, %2 ]
  %6 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i1.068
  store volatile i16 115, i16* %6, align 1, !tbaa !2
  %7 = add nsw i16 %i1.068, 1
  %exitcond79 = icmp eq i16 %7, 91
  br i1 %exitcond79, label %.lr.ph63, label %.lr.ph70

.lr.ph63:                                         ; preds = %.lr.ph70, %.lr.ph63
  %i2.062 = phi i16 [ %9, %.lr.ph63 ], [ 91, %.lr.ph70 ]
  %target_temp.260 = phi i16 [ %10, %.lr.ph63 ], [ 117, %.lr.ph70 ]
  %8 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i2.062
  store volatile i16 %target_temp.260, i16* %8, align 1, !tbaa !2
  %9 = add nsw i16 %i2.062, 1
  %10 = add i16 %target_temp.260, 2
  %exitcond78 = icmp eq i16 %9, 117
  br i1 %exitcond78, label %.lr.ph58, label %.lr.ph63

.lr.ph58:                                         ; preds = %.lr.ph63, %.lr.ph58
  %i3.057 = phi i16 [ %12, %.lr.ph58 ], [ 117, %.lr.ph63 ]
  %11 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i3.057
  store volatile i16 167, i16* %11, align 1, !tbaa !2
  %12 = add nsw i16 %i3.057, 1
  %exitcond76 = icmp eq i16 %12, 122
  br i1 %exitcond76, label %.lr.ph, label %.lr.ph58

.lr.ph:                                           ; preds = %.lr.ph58, %.lr.ph
  %i4.055 = phi i16 [ %14, %.lr.ph ], [ 122, %.lr.ph58 ]
  %target_temp.353 = phi i16 [ %15, %.lr.ph ], [ 162, %.lr.ph58 ]
  %13 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i4.055
  store volatile i16 %target_temp.353, i16* %13, align 1, !tbaa !2
  %14 = add nsw i16 %i4.055, 1
  %15 = add i16 %target_temp.353, -5
  %exitcond75 = icmp eq i16 %14, 141
  br i1 %exitcond75, label %.preheader, label %.lr.ph

.preheader:                                       ; preds = %.lr.ph, %.preheader
  %i5.052 = phi i16 [ %18, %.preheader ], [ 0, %.lr.ph ]
  %16 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i5.052
  %17 = load volatile i16* %16, align 1, !tbaa !2
  tail call void asm sideeffect "\09jsr\09r6, XPD_EchoUnsignedDec", "{R1},~{R1},~{R6}"(i16 %17) nounwind, !srcloc !5
  tail call void asm sideeffect "\09jsr\09r6, XPD_EchoString", "{R1},~{R1},~{R6}"(i16* getelementptr inbounds ([3 x i16]* @.str4, i16 0, i16 0)) nounwind, !srcloc !3
  %18 = add nsw i16 %i5.052, 1
  %exitcond = icmp eq i16 %18, 141
  br i1 %exitcond, label %19, label %.preheader

; <label>:19                                      ; preds = %.preheader
  ret void
}

define void @_Z21generate_test_profile7profile(%struct.profile* noalias nocapture sret %agg.result, %struct.profile* nocapture byval %temp_profile) nounwind {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %i.03 = phi i16 [ 0, %0 ], [ %3, %1 ]
  %2 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 %i.03
  store volatile i16 0, i16* %2, align 1, !tbaa !2
  %3 = add nsw i16 %i.03, 1
  %exitcond = icmp eq i16 %3, 180
  br i1 %exitcond, label %4, label %1

; <label>:4                                       ; preds = %1
  %5 = getelementptr inbounds %struct.profile* %agg.result, i16 0, i32 0, i16 0
  %6 = getelementptr inbounds %struct.profile* %temp_profile, i16 0, i32 0, i16 0
  tail call void @llvm.memcpy.p0i16.p0i16.i16(i16* %5, i16* %6, i16 141, i32 1, i1 false), !tbaa.struct !6
  ret void
}

define i16 @_Z9get_inputv() nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 38) nounwind
  %2 = lshr i16 %1, 3
  %.lobit = and i16 %2, 1
  ret i16 %.lobit
}

define void @_Z20start_humidity_timerv() nounwind {
  tail call void @llvm.XInC2.outp(i16 91, i16 72) nounwind
  tail call void @llvm.XInC2.outp(i16 199, i16 74) nounwind
  ret void
}

define i16 @_Z11rising_edgev() nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 73) nounwind
  ret i16 %1
}

define i16 @_Z12get_humidityjj(i16 %tpw_start, i16 %humidity) nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 73) nounwind
  %2 = icmp ugt i16 %1, %tpw_start
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = sub i16 %1, %tpw_start
  br label %8

; <label>:5                                       ; preds = %0
  %6 = sub i16 199, %tpw_start
  %7 = add i16 %6, %1
  br label %8

; <label>:8                                       ; preds = %5, %3
  %tpw.0 = phi i16 [ %4, %3 ], [ %7, %5 ]
  %9 = mul i16 %tpw.0, 100
  %10 = udiv i16 %9, 199
  %11 = mul i16 %10, 125
  %12 = udiv i16 %11, 100
  %13 = add i16 %12, -6
  ret i16 %13
}

define void @_Z8InitGPIOv() nounwind {
  %1 = tail call i16 @llvm.XInC2.inp(i16 114) nounwind
  %2 = and i16 %1, -1025
  tail call void @llvm.XInC2.outp(i16 %2, i16 114) nounwind
  br label %3

; <label>:3                                       ; preds = %3, %0
  %4 = tail call i16 @llvm.XInC2.inp(i16 114) nounwind
  %5 = icmp sgt i16 %4, -1
  br i1 %5, label %6, label %3

; <label>:6                                       ; preds = %3
  tail call void @llvm.XInC2.outp(i16 1, i16 117) nounwind
  tail call void @llvm.XInC2.outp(i16 2053, i16 116) nounwind
  %7 = tail call i16 @llvm.XInC2.inp(i16 114) nounwind
  %8 = and i16 %7, -1025
  tail call void @llvm.XInC2.outp(i16 %8, i16 114) nounwind
  br label %9

; <label>:9                                       ; preds = %9, %6
  %10 = tail call i16 @llvm.XInC2.inp(i16 114) nounwind
  %11 = icmp sgt i16 %10, -1
  br i1 %11, label %12, label %9

; <label>:12                                      ; preds = %9
  %13 = tail call i16 @llvm.XInC2.inp(i16 114) nounwind
  %14 = or i16 %13, 3072
  tail call void @llvm.XInC2.outp(i16 %14, i16 114) nounwind
  br label %15

; <label>:15                                      ; preds = %15, %12
  %16 = tail call i16 @llvm.XInC2.inp(i16 114) nounwind
  %17 = icmp sgt i16 %16, -1
  br i1 %17, label %15, label %_Z14sys_clock_init12crystal_freq8sys_freq.exit

_Z14sys_clock_init12crystal_freq8sys_freq.exit:   ; preds = %15
  tail call void @llvm.XInC2.outp(i16 -32381, i16 115) nounwind
  tail call void @llvm.XInC2.outp(i16 15, i16 55) nounwind
  tail call void @llvm.XInC2.outp(i16 -30976, i16 33) nounwind
  %18 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %19 = or i16 %18, 4
  tail call void @llvm.XInC2.outp(i16 %19, i16 32) nounwind
  %20 = tail call i16 @llvm.XInC2.inp(i16 32) nounwind
  %21 = or i16 %20, 128
  tail call void @llvm.XInC2.outp(i16 %21, i16 32) nounwind
  tail call void @llvm.XInC2.outp(i16 17, i16 112) nounwind
  tail call void @llvm.XInC2.outp(i16 14, i16 113) nounwind
  tail call void @llvm.XInC2.outp(i16 18, i16 112) nounwind
  tail call void @llvm.XInC2.outp(i16 14, i16 113) nounwind
  tail call void @llvm.XInC2.outp(i16 24576, i16 39) nounwind
  tail call void @llvm.XInC2.outp(i16 512, i16 51) nounwind
  %22 = tail call i16 @llvm.XInC2.inp(i16 50) nounwind
  %23 = or i16 %22, 2
  tail call void @llvm.XInC2.outp(i16 %23, i16 50) nounwind
  tail call void @llvm.XInC2.outp(i16 26, i16 112) nounwind
  tail call void @llvm.XInC2.outp(i16 96, i16 113) nounwind
  ret void
}

define noalias i16* @_Z10TempThreadPv(i16* nocapture) noreturn nounwind {
  br label %2

; <label>:2                                       ; preds = %1, %2
  tail call void @llvm.XInC2.outp(i16 1, i16 7) nounwind
  %3 = tail call i16 @_Z7getTempv()
  store volatile i16 %3, i16* @current_temp, align 1, !tbaa !2
  %4 = load volatile i16* @current_temp, align 1, !tbaa !2
  %5 = mul i16 %4, 109
  %6 = add i16 %5, -283
  %7 = udiv i16 %6, 100
  store volatile i16 %7, i16* @current_temp, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 1, i16 6) nounwind
  br label %2
}

define noalias i16* @_Z14RotEncodThreadPv(i16* nocapture) noreturn nounwind {
  %2 = alloca %struct.rotary_encoder, align 1
  %3 = alloca %struct.rotary_encoder, align 1
  %4 = getelementptr inbounds %struct.rotary_encoder* %3, i16 0, i32 0
  %5 = getelementptr inbounds %struct.rotary_encoder* %2, i16 0, i32 0
  br label %6

; <label>:6                                       ; preds = %1, %6
  call void @llvm.XInC2.outp(i16 8, i16 7) nounwind
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* %4, i16* getelementptr inbounds (%struct.rotary_encoder* @r_encoder, i16 0, i32 0), i16 3, i32 1, i1 false), !tbaa.struct !4
  call void @_Z15get_encoder_pos14rotary_encoder(%struct.rotary_encoder* sret %2, %struct.rotary_encoder* byval %3)
  call void @llvm.memcpy.p0i16.p0i16.i16(i16* getelementptr inbounds (%struct.rotary_encoder* @r_encoder, i16 0, i32 0), i16* %5, i16 3, i32 1, i1 false), !tbaa.struct !4
  call void @llvm.XInC2.outp(i16 8, i16 6) nounwind
  call void @llvm.XInC2.outp(i16 4, i16 7) nounwind
  %7 = call i16 @llvm.XInC2.inp(i16 46) nounwind
  %8 = lshr i16 %7, 2
  %.lobit.i = and i16 %8, 1
  %9 = xor i16 %.lobit.i, 1
  store volatile i16 %9, i16* @btn_press, align 1, !tbaa !2
  call void @llvm.XInC2.outp(i16 4, i16 6) nounwind
  br label %6
}

define noalias i16* @_Z9PIDThreadPv(i16* nocapture) noreturn nounwind {
  %pid1 = alloca %struct.Pid, align 1
  call void @_Z20timer_initializationv()
  call void @llvm.XInC2.outp(i16 64, i16 7) nounwind
  store volatile i16 0, i16* @target_temp_index, align 1, !tbaa !2
  call void @llvm.XInC2.outp(i16 64, i16 6) nounwind
  call void @llvm.XInC2.outp(i16 128, i16 7) nounwind
  store volatile i16 0, i16* @progress, align 1, !tbaa !2
  call void @llvm.XInC2.outp(i16 128, i16 6) nounwind
  %2 = getelementptr inbounds %struct.Pid* %pid1, i16 0, i32 0
  store i16 250, i16* %2, align 1, !tbaa !2
  %3 = getelementptr inbounds %struct.Pid* %pid1, i16 0, i32 1
  store i16 2, i16* %3, align 1, !tbaa !2
  %4 = getelementptr inbounds %struct.Pid* %pid1, i16 0, i32 2
  store i16 280, i16* %4, align 1, !tbaa !2
  %5 = getelementptr inbounds %struct.Pid* %pid1, i16 0, i32 3
  store i16 0, i16* %5, align 1, !tbaa !2
  %6 = getelementptr inbounds %struct.Pid* %pid1, i16 0, i32 4
  store i16 0, i16* %6, align 1, !tbaa !2
  %7 = getelementptr inbounds %struct.Pid* %pid1, i16 0, i32 5
  store i16 2000, i16* %7, align 1, !tbaa !2
  br label %8

; <label>:8                                       ; preds = %1, %30
  %output.0 = phi i16 [ 0, %1 ], [ %output.1, %30 ]
  %time_count.0 = phi i16 [ 0, %1 ], [ %time_count.2, %30 ]
  %9 = call i16 @llvm.XInC2.inp(i16 62) nounwind
  %10 = call i16 @llvm.XInC2.inp(i16 67) nounwind
  %11 = or i16 %10, %9
  %12 = icmp slt i16 %11, 0
  br i1 %12, label %13, label %30

; <label>:13                                      ; preds = %8
  call void @llvm.XInC2.outp(i16 64, i16 7) nounwind
  call void @llvm.XInC2.outp(i16 1, i16 7) nounwind
  %14 = load volatile i16* @target_temp_index, align 1, !tbaa !2
  %15 = getelementptr inbounds %struct.profile* @selected_profile, i16 0, i32 0, i16 %14
  %16 = load volatile i16* %15, align 1, !tbaa !2
  %17 = load volatile i16* @current_temp, align 1, !tbaa !2
  %18 = call i16 @_Z11pid_computeP3Pidjj(%struct.Pid* %pid1, i16 %16, i16 %17)
  call void @llvm.XInC2.outp(i16 1, i16 6) nounwind
  %19 = add i16 %time_count.0, 1
  %20 = icmp eq i16 %19, 2
  br i1 %20, label %21, label %29

; <label>:21                                      ; preds = %13
  %22 = load volatile i16* @target_temp_index, align 1, !tbaa !2
  %23 = add i16 %22, 1
  store volatile i16 %23, i16* @target_temp_index, align 1, !tbaa !2
  call void @llvm.XInC2.outp(i16 128, i16 7) nounwind
  %24 = load volatile i16* @target_temp_index, align 1, !tbaa !2
  %25 = mul i16 %24, 100
  %26 = add i16 %25, 100
  %27 = load volatile i16* @progress_scaler, align 1, !tbaa !2
  %28 = udiv i16 %26, %27
  store volatile i16 %28, i16* @progress, align 1, !tbaa !2
  call void @llvm.XInC2.outp(i16 128, i16 6) nounwind
  call void @llvm.XInC2.outp(i16 256, i16 7) nounwind
  store volatile i16 1, i16* @print_humidity, align 1, !tbaa !2
  call void @llvm.XInC2.outp(i16 256, i16 6) nounwind
  br label %29

; <label>:29                                      ; preds = %21, %13
  %time_count.1 = phi i16 [ 0, %21 ], [ %19, %13 ]
  call void @llvm.XInC2.outp(i16 64, i16 6) nounwind
  br label %30

; <label>:30                                      ; preds = %29, %8
  %output.1 = phi i16 [ %18, %29 ], [ %output.0, %8 ]
  %time_count.2 = phi i16 [ %time_count.1, %29 ], [ %time_count.0, %8 ]
  call void @_Z14heating_actionj(i16 %output.1)
  br label %8
}

define noalias i16* @_Z14HumidityThreadPv(i16* nocapture) noreturn nounwind {
  tail call void @llvm.XInC2.outp(i16 91, i16 72) nounwind
  tail call void @llvm.XInC2.outp(i16 199, i16 74) nounwind
  br label %2

; <label>:2                                       ; preds = %7, %12, %9, %1
  %prev_state.0 = phi i16 [ 0, %1 ], [ %.lobit.i, %7 ], [ 0, %12 ], [ %prev_state.0, %9 ]
  %tpw_start.0 = phi i16 [ 0, %1 ], [ %8, %7 ], [ %tpw_start.0, %12 ], [ %tpw_start.0, %9 ]
  %3 = tail call i16 @llvm.XInC2.inp(i16 38) nounwind
  %4 = lshr i16 %3, 3
  %.lobit.i = and i16 %4, 1
  %5 = icmp ne i16 %.lobit.i, 0
  %6 = icmp eq i16 %prev_state.0, 0
  %or.cond = and i1 %5, %6
  br i1 %or.cond, label %7, label %9

; <label>:7                                       ; preds = %2
  %8 = tail call i16 @llvm.XInC2.inp(i16 73) nounwind
  br label %2

; <label>:9                                       ; preds = %2
  %10 = icmp eq i16 %.lobit.i, 0
  %11 = icmp eq i16 %prev_state.0, 1
  %or.cond6 = and i1 %10, %11
  br i1 %or.cond6, label %12, label %2

; <label>:12                                      ; preds = %9
  tail call void @llvm.XInC2.outp(i16 2, i16 7) nounwind
  %13 = load volatile i16* @humidity, align 1, !tbaa !2
  %14 = tail call i16 @_Z12get_humidityjj(i16 %tpw_start.0, i16 undef)
  store volatile i16 %14, i16* @humidity, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 2, i16 6) nounwind
  br label %2
}

define noalias i16* @_Z15stateOLEDThreadPv(i16* nocapture) noreturn nounwind {
  tail call void @_Z19OLED_Init_160128RGBv()
  tail call void @_Z25OLED_FillScreen_160128RGBm(i32 0)
  br label %.outer

.outer:                                           ; preds = %39, %51, %50, %59, %.critedge, %91, %1
  %scene.0.ph = phi i16 [ 0, %1 ], [ %scene.5, %91 ], [ 4, %.critedge ], [ 1, %59 ], [ %scene.2, %50 ], [ 2, %51 ], [ %scene.1, %39 ]
  switch i16 %scene.0.ph, label %infloop [
    i16 0, label %.split
    i16 3, label %.split7
    i16 2, label %.split10
    i16 1, label %.split13
    i16 4, label %.split16
  ]

.split:                                           ; preds = %.outer
  tail call void @llvm.XInC2.outp(i16 16, i16 7) nounwind
  %2 = load volatile i16* @profile_index, align 1, !tbaa !2
  tail call void @_Z17OLED_profile_pagej(i16 %2)
  %3 = load volatile i16* @profile_index, align 1, !tbaa !2
  %4 = add i16 %3, -1
  %5 = getelementptr inbounds [3 x [6 x i16]]* @profile_array, i16 0, i16 %4, i16 0
  tail call void @_Z18OLED_profile_timesPj(i16* %5)
  tail call void @llvm.XInC2.outp(i16 16, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 8, i16 7) nounwind
  %6 = load volatile i16* getelementptr inbounds (%struct.rotary_encoder* @r_encoder, i16 0, i32 2), align 1, !tbaa !2
  %7 = icmp eq i16 %6, 1
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %.split
  tail call void @llvm.XInC2.outp(i16 16, i16 7) nounwind
  %9 = load volatile i16* @profile_index, align 1, !tbaa !2
  %10 = add i16 %9, 1
  store volatile i16 %10, i16* @profile_index, align 1, !tbaa !2
  %11 = load volatile i16* @profile_index, align 1, !tbaa !2
  %12 = icmp ugt i16 %11, 3
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %8
  store volatile i16 1, i16* @profile_index, align 1, !tbaa !2
  br label %14

; <label>:14                                      ; preds = %13, %8
  tail call void @llvm.XInC2.outp(i16 16, i16 6) nounwind
  store volatile i16 0, i16* getelementptr inbounds (%struct.rotary_encoder* @r_encoder, i16 0, i32 2), align 1, !tbaa !2
  br label %25

; <label>:15                                      ; preds = %.split
  %16 = load volatile i16* getelementptr inbounds (%struct.rotary_encoder* @r_encoder, i16 0, i32 2), align 1, !tbaa !2
  %17 = icmp eq i16 %16, 2
  br i1 %17, label %18, label %25

; <label>:18                                      ; preds = %15
  tail call void @llvm.XInC2.outp(i16 16, i16 7) nounwind
  %19 = load volatile i16* @profile_index, align 1, !tbaa !2
  %20 = add i16 %19, -1
  store volatile i16 %20, i16* @profile_index, align 1, !tbaa !2
  %21 = load volatile i16* @profile_index, align 1, !tbaa !2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %18
  store volatile i16 3, i16* @profile_index, align 1, !tbaa !2
  br label %24

; <label>:24                                      ; preds = %23, %18
  tail call void @llvm.XInC2.outp(i16 16, i16 6) nounwind
  store volatile i16 0, i16* getelementptr inbounds (%struct.rotary_encoder* @r_encoder, i16 0, i32 2), align 1, !tbaa !2
  br label %25

; <label>:25                                      ; preds = %15, %24, %14
  tail call void @llvm.XInC2.outp(i16 8, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 4, i16 7) nounwind
  %26 = tail call i16 @llvm.XInC2.inp(i16 46) nounwind
  %27 = lshr i16 %26, 2
  %.lobit.i2 = and i16 %27, 1
  %28 = xor i16 %.lobit.i2, 1
  store volatile i16 %28, i16* @btn_press, align 1, !tbaa !2
  %29 = load volatile i16* @btn_press, align 1, !tbaa !2
  %30 = icmp eq i16 %29, 1
  br i1 %30, label %31, label %39

; <label>:31                                      ; preds = %25
  tail call void @_Z25OLED_FillScreen_160128RGBm(i32 0)
  %32 = load volatile i16* @profile_index, align 1, !tbaa !2
  switch i16 %32, label %39 [
    i16 1, label %33
    i16 2, label %35
    i16 3, label %37
  ]

; <label>:33                                      ; preds = %31
  %34 = load %struct.profile** @temp_ptr, align 1, !tbaa !7
  tail call void @_Z21generate_RSS_profile1P7profile(%struct.profile* %34)
  store volatile i16 111, i16* @progress_scaler, align 1, !tbaa !2
  br label %39

; <label>:35                                      ; preds = %31
  %36 = load %struct.profile** @temp_ptr, align 1, !tbaa !7
  tail call void @_Z21generate_RSS_profile2P7profile(%struct.profile* %36)
  store volatile i16 126, i16* @progress_scaler, align 1, !tbaa !2
  br label %39

; <label>:37                                      ; preds = %31
  %38 = load %struct.profile** @temp_ptr, align 1, !tbaa !7
  tail call void @_Z21generate_RSS_profile3P7profile(%struct.profile* %38)
  store volatile i16 122, i16* @progress_scaler, align 1, !tbaa !2
  br label %39

; <label>:39                                      ; preds = %33, %35, %37, %31, %25
  %scene.1 = phi i16 [ 3, %31 ], [ 3, %37 ], [ 3, %35 ], [ 3, %33 ], [ %scene.0.ph, %25 ]
  tail call void @llvm.XInC2.outp(i16 4, i16 6) nounwind
  br label %.outer

.split7:                                          ; preds = %.outer
  tail call void @llvm.XInC2.outp(i16 2, i16 7) nounwind
  %40 = load volatile i16* @humidity, align 1, !tbaa !2
  %41 = icmp ugt i16 %40, 60
  br i1 %41, label %42, label %51

; <label>:42                                      ; preds = %.split7
  tail call void @_Z20OLED_display_warningv()
  %43 = load volatile i16* @humidity, align 1, !tbaa !2
  tail call void @_Z20OLED_update_humidityj(i16 %43)
  tail call void @llvm.XInC2.outp(i16 2, i16 6) nounwind
  tail call void @_Z7wait_msj(i16 100)
  tail call void @_Z16OLED_acknowledgev()
  tail call void @llvm.XInC2.outp(i16 4, i16 7) nounwind
  %44 = tail call i16 @llvm.XInC2.inp(i16 46) nounwind
  %45 = lshr i16 %44, 2
  %.lobit.i3 = and i16 %45, 1
  %46 = xor i16 %.lobit.i3, 1
  store volatile i16 %46, i16* @btn_press, align 1, !tbaa !2
  %47 = load volatile i16* @btn_press, align 1, !tbaa !2
  %48 = icmp eq i16 %47, 1
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %42
  tail call void @llvm.XInC2.outp(i16 4, i16 6) nounwind
  tail call void @_Z7wait_msj(i16 500)
  tail call void @_Z25OLED_FillScreen_160128RGBm(i32 0)
  br label %50

; <label>:50                                      ; preds = %49, %42
  %scene.2 = phi i16 [ 2, %49 ], [ %scene.0.ph, %42 ]
  tail call void @llvm.XInC2.outp(i16 4, i16 6) nounwind
  br label %.outer

; <label>:51                                      ; preds = %.split7
  tail call void @llvm.XInC2.outp(i16 2, i16 6) nounwind
  br label %.outer

.split10:                                         ; preds = %.outer
  tail call void @_Z18OLED_starting_pagev()
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  %52 = load i16* @thrds_vector, align 1, !tbaa !2
  %53 = and i16 %52, -9
  store i16 %53, i16* @thrds_vector, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 %53, i16 4) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @_Z7wait_msj(i16 1000)
  tail call void @llvm.XInC2.outp(i16 1, i16 7) nounwind
  %54 = load volatile i16* @current_temp, align 1, !tbaa !2
  %55 = icmp ult i16 %54, 100
  br i1 %55, label %56, label %59

; <label>:56                                      ; preds = %.split10
  %57 = tail call i16 @llvm.XInC2.inp(i16 38) nounwind
  %58 = or i16 %57, 96
  tail call void @llvm.XInC2.outp(i16 %58, i16 38) nounwind
  br label %59

; <label>:59                                      ; preds = %56, %.split10
  tail call void @llvm.XInC2.outp(i16 1, i16 6) nounwind
  tail call void @_Z7wait_msj(i16 1000)
  tail call void @_Z25OLED_FillScreen_160128RGBm(i32 0)
  br label %.outer

.split13:                                         ; preds = %.outer
  tail call void @llvm.XInC2.outp(i16 1, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 2, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 64, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 16, i16 7) nounwind
  %60 = load volatile i16* @profile_index, align 1, !tbaa !2
  tail call void @_Z21OLED_display_progressj(i16 %60)
  tail call void @llvm.XInC2.outp(i16 16, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 64, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 2, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 1, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  %61 = load i16* @thrds_vector, align 1, !tbaa !2
  %62 = and i16 %61, -17
  store i16 %62, i16* @thrds_vector, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 %62, i16 4) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  %63 = load i16* @thrds_vector, align 1, !tbaa !2
  %64 = and i16 %63, -33
  store i16 %64, i16* @thrds_vector, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 %64, i16 4) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  %65 = load volatile i16* @progress, align 1, !tbaa !2
  %66 = icmp ult i16 %65, 101
  br i1 %66, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %.split13, %74
  tail call void @llvm.XInC2.outp(i16 1, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 64, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 4, i16 7) nounwind
  %67 = load volatile i16* @btn_press, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 4, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 128, i16 7) nounwind
  %68 = load volatile i16* @progress, align 1, !tbaa !2
  tail call void @_Z20OLED_update_progressi(i16 %68)
  tail call void @llvm.XInC2.outp(i16 128, i16 6) nounwind
  %69 = load volatile i16* @current_temp, align 1, !tbaa !2
  tail call void @_Z16OLED_update_tempi(i16 %69)
  tail call void @llvm.XInC2.outp(i16 256, i16 7) nounwind
  %70 = load volatile i16* @print_humidity, align 1, !tbaa !2
  %71 = icmp eq i16 %70, 1
  br i1 %71, label %72, label %74

; <label>:72                                      ; preds = %.lr.ph
  tail call void @llvm.XInC2.outp(i16 2, i16 7) nounwind
  %73 = load volatile i16* @humidity, align 1, !tbaa !2
  tail call void @_Z20OLED_update_humidityj(i16 %73)
  tail call void @llvm.XInC2.outp(i16 2, i16 6) nounwind
  store volatile i16 0, i16* @print_humidity, align 1, !tbaa !2
  br label %74

; <label>:74                                      ; preds = %72, %.lr.ph
  tail call void @llvm.XInC2.outp(i16 256, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 64, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 1, i16 6) nounwind
  %75 = load volatile i16* @progress, align 1, !tbaa !2
  %76 = icmp ult i16 %75, 101
  %not. = icmp ne i16 %67, 1
  %or.cond = and i1 %76, %not.
  br i1 %or.cond, label %.lr.ph, label %.critedge

.critedge:                                        ; preds = %74, %.split13
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  %77 = load i16* @thrds_vector, align 1, !tbaa !2
  %78 = or i16 %77, 8
  store i16 %78, i16* @thrds_vector, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 %78, i16 4) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  %79 = load i16* @thrds_vector, align 1, !tbaa !2
  %80 = or i16 %79, 16
  store i16 %80, i16* @thrds_vector, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 %80, i16 4) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  %81 = load i16* @thrds_vector, align 1, !tbaa !2
  %82 = or i16 %81, 32
  store i16 %82, i16* @thrds_vector, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 %82, i16 4) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  %83 = tail call i16 @llvm.XInC2.inp(i16 38) nounwind
  %84 = and i16 %83, -97
  tail call void @llvm.XInC2.outp(i16 %84, i16 38) nounwind
  tail call void @llvm.XInC2.outp(i16 64, i16 7) nounwind
  store volatile i16 0, i16* @target_temp_index, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 64, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 128, i16 7) nounwind
  store volatile i16 0, i16* @progress, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 128, i16 6) nounwind
  tail call void @_Z25OLED_FillScreen_160128RGBm(i32 0)
  br label %.outer

.split16:                                         ; preds = %.outer
  tail call void @_Z17OLED_end_progressv()
  tail call void @_Z7wait_msj(i16 100)
  tail call void @_Z16OLED_acknowledgev()
  tail call void @llvm.XInC2.outp(i16 4, i16 7) nounwind
  %85 = tail call i16 @llvm.XInC2.inp(i16 46) nounwind
  %86 = lshr i16 %85, 2
  %.lobit.i = and i16 %86, 1
  %87 = xor i16 %.lobit.i, 1
  store volatile i16 %87, i16* @btn_press, align 1, !tbaa !2
  %88 = load volatile i16* @btn_press, align 1, !tbaa !2
  %89 = icmp eq i16 %88, 1
  br i1 %89, label %90, label %91

; <label>:90                                      ; preds = %.split16
  tail call void @_Z7wait_msj(i16 1000)
  tail call void @_Z25OLED_FillScreen_160128RGBm(i32 0)
  br label %91

; <label>:91                                      ; preds = %90, %.split16
  %scene.5 = phi i16 [ 0, %90 ], [ 4, %.split16 ]
  tail call void @llvm.XInC2.outp(i16 4, i16 6) nounwind
  br label %.outer

infloop:                                          ; preds = %.outer, %infloop
  br label %infloop
}

define i16 @main() nounwind {
  tail call void @llvm.XInC2.outp(i16 22, i16 112) nounwind
  tail call void @llvm.XInC2.outp(i16 115, i16 113) nounwind
  tail call void @_Z8InitGPIOv()
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 10, i16 3) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 0) nounwind
  tail call void @llvm.XInC2.outp(i16 ptrtoint (i16* (i16*)* @_Z15stateOLEDThreadPv to i16), i16 1) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  %1 = load i16* @thrds_vector, align 1, !tbaa !2
  %2 = and i16 %1, -3
  store i16 %2, i16* @thrds_vector, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 %2, i16 4) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 18, i16 3) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 0) nounwind
  tail call void @llvm.XInC2.outp(i16 ptrtoint (i16* (i16*)* @_Z14RotEncodThreadPv to i16), i16 1) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  %3 = load i16* @thrds_vector, align 1, !tbaa !2
  %4 = and i16 %3, -5
  store i16 %4, i16* @thrds_vector, align 1, !tbaa !2
  tail call void @llvm.XInC2.outp(i16 %4, i16 4) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 26, i16 3) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 0) nounwind
  tail call void @llvm.XInC2.outp(i16 ptrtoint (i16* (i16*)* @_Z10TempThreadPv to i16), i16 1) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 34, i16 3) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 0) nounwind
  tail call void @llvm.XInC2.outp(i16 ptrtoint (i16* (i16*)* @_Z14HumidityThreadPv to i16), i16 1) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 7) nounwind
  tail call void @llvm.XInC2.outp(i16 42, i16 3) nounwind
  tail call void @llvm.XInC2.outp(i16 0, i16 0) nounwind
  tail call void @llvm.XInC2.outp(i16 ptrtoint (i16* (i16*)* @_Z9PIDThreadPv to i16), i16 1) nounwind
  tail call void @llvm.XInC2.outp(i16 -32768, i16 6) nounwind
  ret i16 0
}

declare void @llvm.XInC2.outp(i16, i16) nounwind

declare i16 @llvm.XInC2.inp(i16) nounwind

!0 = metadata !{metadata !"omnipotent char", metadata !1}
!1 = metadata !{metadata !"Simple C/C++ TBAA"}
!2 = metadata !{metadata !"int", metadata !0}
!3 = metadata !{i32 -2147379966}                  
!4 = metadata !{i64 0, i64 1, metadata !0, i64 1, i64 1, metadata !0, i64 2, i64 1, metadata !2}
!5 = metadata !{i32 -2147379269}                  
!6 = metadata !{i64 0, i64 141, metadata !0}
!7 = metadata !{metadata !"any pointer", metadata !0}
